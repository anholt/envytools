<?xml version="1.0" encoding="UTF-8"?>
<database xmlns="http://nouveau.freedesktop.org/"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://nouveau.freedesktop.org/ rules-ng.xsd">
<import file="freedreno_copyright.xml"/>
<import file="adreno/adreno_common.xml"/>
<import file="adreno/adreno_pm4.xml"/>

<enum name="a5xx_color_fmt">
	<value value="0x03" name="RB5_R8_UNORM"/>
	<value value="0x05" name="RB5_R8_UINT"/>
	<value value="0x06" name="RB5_R8_SINT"/>
	<value value="0x08" name="RB5_R4G4B4A4_UNORM"/>
	<value value="0x0a" name="RB5_R5G5B5A1_UNORM"/>
	<value value="0x0e" name="RB5_R5G6B5_UNORM"/>
	<value value="0x0f" name="RB5_R8G8_UNORM"/>
	<value value="0x10" name="RB5_R8G8_SNORM"/>
	<value value="0x11" name="RB5_R8G8_UINT"/>
	<value value="0x12" name="RB5_R8G8_SINT"/>
	<value value="0x15" name="RB5_R16_UNORM"/>
	<value value="0x16" name="RB5_R16_SNORM"/>
	<value value="0x17" name="RB5_R16_FLOAT"/>
	<value value="0x18" name="RB5_R16_UINT"/>
	<value value="0x19" name="RB5_R16_SINT"/>
	<value value="0x30" name="RB5_R8G8B8A8_UNORM"/>
	<value value="0x31" name="RB5_R8G8B8_UNORM"/>
	<value value="0x33" name="RB5_R8G8B8A8_UINT"/>
	<value value="0x34" name="RB5_R8G8B8A8_SINT"/>
	<value value="0x37" name="RB5_R10G10B10A2_UNORM"/>  <!-- GL_RGB10_A2 -->
	<value value="0x3a" name="RB5_R10G10B10A2_UINT"/>   <!-- GL_RGB10_A2UI -->
	<value value="0x42" name="RB5_R11G11B10_FLOAT"/>    <!-- GL_R11F_G11F_B10F -->
	<value value="0x43" name="RB5_R16G16_UNORM"/>
	<value value="0x44" name="RB5_R16G16_SNORM"/>
	<value value="0x45" name="RB5_R16G16_FLOAT"/>
	<value value="0x46" name="RB5_R16G16_UINT"/>
	<value value="0x47" name="RB5_R16G16_SINT"/>
	<value value="0x4a" name="RB5_R32_FLOAT"/>
	<value value="0x4b" name="RB5_R32_UINT"/>
	<value value="0x4c" name="RB5_R32_SINT"/>
	<value value="0x62" name="RB5_R16G16B16A16_FLOAT"/>
	<value value="0x63" name="RB5_R16G16B16A16_UINT"/>
	<value value="0x64" name="RB5_R16G16B16A16_SINT"/>
	<value value="0x67" name="RB5_R32G32_FLOAT"/>
	<value value="0x68" name="RB5_R32G32_UINT"/>
	<value value="0x69" name="RB5_R32G32_SINT"/>
	<value value="0x82" name="RB5_R32G32B32A32_FLOAT"/>
	<value value="0x83" name="RB5_R32G32B32A32_UINT"/>
	<value value="0x84" name="RB5_R32G32B32A32_SINT"/>
</enum>

<enum name="a5xx_tile_mode">
	<value name="TILE5_LINEAR" value="0"/>
	<value name="TILE5_2" value="2"/>
	<value name="TILE5_3" value="3"/>
</enum>

<enum name="a5xx_vtx_fmt" prefix="chipset">
	<value value="0x03" name="VFMT5_8_UNORM"/>
	<value value="0x04" name="VFMT5_8_SNORM"/>
	<value value="0x05" name="VFMT5_8_UINT"/>
	<value value="0x06" name="VFMT5_8_SINT"/>

	<value value="0x0f" name="VFMT5_8_8_UNORM"/>
	<value value="0x10" name="VFMT5_8_8_SNORM"/>
	<value value="0x11" name="VFMT5_8_8_UINT"/>
	<value value="0x12" name="VFMT5_8_8_SINT"/>

	<value value="0x15" name="VFMT5_16_UNORM"/>
	<value value="0x16" name="VFMT5_16_SNORM"/>
	<value value="0x17" name="VFMT5_16_FLOAT"/>
	<value value="0x18" name="VFMT5_16_UINT"/>
	<value value="0x19" name="VFMT5_16_SINT"/>

	<value value="0x21" name="VFMT5_8_8_8_UNORM"/>
	<value value="0x22" name="VFMT5_8_8_8_SNORM"/>
	<value value="0x23" name="VFMT5_8_8_8_UINT"/>
	<value value="0x24" name="VFMT5_8_8_8_SINT"/>

	<value value="0x30" name="VFMT5_8_8_8_8_UNORM"/>
	<value value="0x32" name="VFMT5_8_8_8_8_SNORM"/>
	<value value="0x33" name="VFMT5_8_8_8_8_UINT"/>
	<value value="0x34" name="VFMT5_8_8_8_8_SINT"/>

	<value value="0x43" name="VFMT5_16_16_UNORM"/>
	<value value="0x44" name="VFMT5_16_16_SNORM"/>
	<value value="0x45" name="VFMT5_16_16_FLOAT"/>
	<value value="0x46" name="VFMT5_16_16_UINT"/>
	<value value="0x47" name="VFMT5_16_16_SINT"/>

	<value value="0x48" name="VFMT5_32_UNORM"/>
	<value value="0x49" name="VFMT5_32_SNORM"/>
	<value value="0x4a" name="VFMT5_32_FLOAT"/>
	<value value="0x4b" name="VFMT5_32_UINT"/>
	<value value="0x4c" name="VFMT5_32_SINT"/>
	<value value="0x4d" name="VFMT5_32_FIXED"/>

	<value value="0x58" name="VFMT5_16_16_16_UNORM"/>
	<value value="0x59" name="VFMT5_16_16_16_SNORM"/>
	<value value="0x5a" name="VFMT5_16_16_16_FLOAT"/>
	<value value="0x5b" name="VFMT5_16_16_16_UINT"/>
	<value value="0x5c" name="VFMT5_16_16_16_SINT"/>

	<value value="0x60" name="VFMT5_16_16_16_16_UNORM"/>
	<value value="0x61" name="VFMT5_16_16_16_16_SNORM"/>
	<value value="0x62" name="VFMT5_16_16_16_16_FLOAT"/>
	<value value="0x63" name="VFMT5_16_16_16_16_UINT"/>
	<value value="0x64" name="VFMT5_16_16_16_16_SINT"/>

	<value value="0x65" name="VFMT5_32_32_UNORM"/>
	<value value="0x66" name="VFMT5_32_32_SNORM"/>
	<value value="0x67" name="VFMT5_32_32_FLOAT"/>
	<value value="0x68" name="VFMT5_32_32_UINT"/>
	<value value="0x69" name="VFMT5_32_32_SINT"/>
	<value value="0x6a" name="VFMT5_32_32_FIXED"/>

	<value value="0x70" name="VFMT5_32_32_32_UNORM"/>
	<value value="0x71" name="VFMT5_32_32_32_SNORM"/>
	<value value="0x72" name="VFMT5_32_32_32_UINT"/>
	<value value="0x73" name="VFMT5_32_32_32_SINT"/>
	<value value="0x74" name="VFMT5_32_32_32_FLOAT"/>
	<value value="0x75" name="VFMT5_32_32_32_FIXED"/>

	<value value="0x80" name="VFMT5_32_32_32_32_UNORM"/>
	<value value="0x81" name="VFMT5_32_32_32_32_SNORM"/>
	<value value="0x82" name="VFMT5_32_32_32_32_FLOAT"/>
	<value value="0x83" name="VFMT5_32_32_32_32_UINT"/>
	<value value="0x84" name="VFMT5_32_32_32_32_SINT"/>
	<value value="0x85" name="VFMT5_32_32_32_32_FIXED"/>
</enum>

<enum name="a5xx_tex_fmt">
	<value value="0x02" name="TFMT5_A8_UNORM"/>
	<value value="0x03" name="TFMT5_8_UNORM"/>
	<value value="0x05" name="TFMT5_8_UINT"/>
	<value value="0x06" name="TFMT5_8_SINT"/>
	<value value="0x08" name="TFMT5_4_4_4_4_UNORM"/>
	<value value="0x0a" name="TFMT5_5_5_5_1_UNORM"/>
	<value value="0x0e" name="TFMT5_5_6_5_UNORM"/>
	<value value="0x0f" name="TFMT5_8_8_UNORM"/>
	<value value="0x10" name="TFMT5_8_8_SNORM"/>
	<value value="0x11" name="TFMT5_8_8_UINT"/>
	<value value="0x12" name="TFMT5_8_8_SINT"/>
	<value value="0x13" name="TFMT5_L8_A8_UNORM"/>
	<value value="0x15" name="TFMT5_16_UNORM"/>
	<value value="0x16" name="TFMT5_16_SNORM"/>
	<value value="0x17" name="TFMT5_16_FLOAT"/>
	<value value="0x18" name="TFMT5_16_UINT"/>
	<value value="0x19" name="TFMT5_16_SINT"/>
	<value value="0x30" name="TFMT5_8_8_8_8_UNORM"/>
	<value value="0x31" name="TFMT5_8_8_8_UNORM"/>
	<value value="0x32" name="TFMT5_8_8_8_SNORM"/>
	<value value="0x33" name="TFMT5_8_8_8_8_UINT"/>
	<value value="0x34" name="TFMT5_8_8_8_8_SINT"/>
	<value value="0x35" name="TFMT5_9_9_9_E5_FLOAT"/>
	<value value="0x36" name="TFMT5_10_10_10_2_UNORM"/>
	<value value="0x3a" name="TFMT5_10_10_10_2_UINT"/>
	<value value="0x42" name="TFMT5_11_11_10_FLOAT"/>
	<value value="0x43" name="TFMT5_16_16_UNORM"/>
	<value value="0x44" name="TFMT5_16_16_SNORM"/>
	<value value="0x45" name="TFMT5_16_16_FLOAT"/>
	<value value="0x46" name="TFMT5_16_16_UINT"/>
	<value value="0x47" name="TFMT5_16_16_SINT"/>
	<value value="0x4a" name="TFMT5_32_FLOAT"/>
	<value value="0x4b" name="TFMT5_32_UINT"/>
	<value value="0x4c" name="TFMT5_32_SINT"/>
	<value value="0x62" name="TFMT5_16_16_16_16_FLOAT"/>
	<value value="0x63" name="TFMT5_16_16_16_16_UINT"/>
	<value value="0x64" name="TFMT5_16_16_16_16_SINT"/>
	<value value="0x67" name="TFMT5_32_32_FLOAT"/>
	<value value="0x68" name="TFMT5_32_32_UINT"/>
	<value value="0x69" name="TFMT5_32_32_SINT"/>
	<value value="0x82" name="TFMT5_32_32_32_32_FLOAT"/>
	<value value="0x83" name="TFMT5_32_32_32_32_UINT"/>
	<value value="0x84" name="TFMT5_32_32_32_32_SINT"/>
	<value value="0xa0" name="TFMT5_X8Z24_UNORM"/>
</enum>

<enum name="a5xx_tex_fetchsize">
	<doc>
		Size pixel to fetch, in bytes.  Doesn't seem to be required, setting
		it to 0x0 seems to work ok, but may be less optimal.
	</doc>
	<value name="TFETCH5_1_BYTE"  value="0"/>
	<value name="TFETCH5_2_BYTE"  value="1"/>
	<value name="TFETCH5_4_BYTE"  value="2"/>
	<value name="TFETCH5_8_BYTE"  value="3"/>
	<value name="TFETCH5_16_BYTE" value="4"/>
</enum>

<enum name="a5xx_depth_format">
	<value name="DEPTH5_NONE" value="0"/>
	<value name="DEPTH5_16" value="1"/>
	<value name="DEPTH5_24_8" value="2"/>
	<value name="DEPTH5_32" value="4"/>
</enum>

<enum name="a5xx_blit_buf">
	<value value="0" name="BLIT_MRT0"/>
	<value value="1" name="BLIT_MRT1"/>
	<value value="2" name="BLIT_MRT2"/>
	<value value="3" name="BLIT_MRT3"/>
	<value value="4" name="BLIT_MRT4"/>
	<value value="5" name="BLIT_MRT5"/>
	<value value="6" name="BLIT_MRT6"/>
	<value value="7" name="BLIT_MRT7"/>
	<value value="8" name="BLIT_ZS"/>
	<!-- NOTE: Z32 seen w/ z32_x24s8 but ZS used for z32 (no stencil) -->
	<value value="9" name="BLIT_Z32"/>
</enum>

<domain name="A5XX" width="32">
	<bitset name="A5XX_INT0">
		<bitfield name="RBBM_GPU_IDLE" pos="0"/>
		<bitfield name="RBBM_AHB_ERROR" pos="1"/>
		<bitfield name="RBBM_TRANSFER_TIMEOUT" pos="2"/>
		<bitfield name="RBBM_ME_MS_TIMEOUT" pos="3"/>
		<bitfield name="RBBM_PFP_MS_TIMEOUT" pos="4"/>
		<bitfield name="RBBM_ETS_MS_TIMEOUT" pos="5"/>
		<bitfield name="RBBM_ATB_ASYNC_OVERFLOW" pos="6"/>
		<bitfield name="RBBM_GPC_ERROR" pos="7"/>
		<bitfield name="CP_SW" pos="8"/>
		<bitfield name="CP_HW_ERROR" pos="9"/>
		<bitfield name="CP_CCU_FLUSH_DEPTH_TS" pos="10"/>
		<bitfield name="CP_CCU_FLUSH_COLOR_TS" pos="11"/>
		<bitfield name="CP_CCU_RESOLVE_TS" pos="12"/>
		<bitfield name="CP_IB2" pos="13"/>
		<bitfield name="CP_IB1" pos="14"/>
		<bitfield name="CP_RB" pos="15"/>
		<bitfield name="CP_UNUSED_1" pos="16"/>
		<bitfield name="CP_RB_DONE_TS" pos="17"/>
		<bitfield name="CP_WT_DONE_TS" pos="18"/>
		<bitfield name="UNKNOWN_1" pos="19"/>
		<bitfield name="CP_CACHE_FLUSH_TS" pos="20"/>
		<bitfield name="UNUSED_2" pos="21"/>
		<bitfield name="RBBM_ATB_BUS_OVERFLOW" pos="22"/>
		<bitfield name="MISC_HANG_DETECT" pos="23"/>
		<bitfield name="UCHE_OOB_ACCESS" pos="24"/>
		<bitfield name="UCHE_TRAP_INTR" pos="25"/>
		<bitfield name="DEBBUS_INTR_0" pos="26"/>
		<bitfield name="DEBBUS_INTR_1" pos="27"/>
		<bitfield name="GPMU_VOLTAGE_DROOP" pos="28"/>
		<bitfield name="GPMU_FIRMWARE" pos="29"/>
		<bitfield name="ISDB_CPU_IRQ" pos="30"/>
		<bitfield name="ISDB_UNDER_DEBUG" pos="31"/>
	</bitset>

	<!-- CP Interrupt bits -->
	<bitset name="A5XX_CP_INT">
		<bitfield name="CP_OPCODE_ERROR" pos="0"/>
		<bitfield name="CP_RESERVED_BIT_ERROR" pos="1"/>
		<bitfield name="CP_HW_FAULT_ERROR" pos="2"/>
		<bitfield name="CP_DMA_ERROR" pos="3"/>
		<bitfield name="CP_REGISTER_PROTECTION_ERROR" pos="4"/>
		<bitfield name="CP_AHB_ERROR" pos="5"/>
	</bitset>

	<!-- CP registers -->
	<reg32 offset="0x0800" name="CP_RB_BASE"/>
	<reg32 offset="0x0801" name="CP_RB_BASE_HI"/>
	<reg32 offset="0x0802" name="CP_RB_CNTL"/>
	<reg32 offset="0x0804" name="CP_RB_RPTR_ADDR"/>
	<reg32 offset="0x0805" name="CP_RB_RPTR_ADDR_HI"/>
	<reg32 offset="0x0806" name="CP_RB_RPTR"/>
	<reg32 offset="0x0807" name="CP_RB_WPTR"/>
	<reg32 offset="0x0808" name="CP_PFP_STAT_ADDR"/>
	<reg32 offset="0x0809" name="CP_PFP_STAT_DATA"/>
	<reg32 offset="0x080b" name="CP_DRAW_STATE_ADDR"/>
	<reg32 offset="0x080c" name="CP_DRAW_STATE_DATA"/>
	<reg32 offset="0x0817" name="CP_CRASH_SCRIPT_BASE_LO"/>
	<reg32 offset="0x0818" name="CP_CRASH_SCRIPT_BASE_HI"/>
	<reg32 offset="0x0819" name="CP_CRASH_DUMP_CNTL"/>
	<reg32 offset="0x081a" name="CP_ME_STAT_ADDR"/>
	<reg32 offset="0x081f" name="CP_ROQ_THRESHOLDS_1"/>
	<reg32 offset="0x0820" name="CP_ROQ_THRESHOLDS_2"/>
	<reg32 offset="0x0821" name="CP_ROQ_DBG_ADDR"/>
	<reg32 offset="0x0822" name="CP_ROQ_DBG_DATA"/>
	<reg32 offset="0x0823" name="CP_MEQ_DBG_ADDR"/>
	<reg32 offset="0x0824" name="CP_MEQ_DBG_DATA"/>
	<reg32 offset="0x0825" name="CP_MEQ_THRESHOLDS"/>
	<reg32 offset="0x0826" name="CP_MERCIU_SIZE"/>
	<reg32 offset="0x0827" name="CP_MERCIU_DBG_ADDR"/>
	<reg32 offset="0x0828" name="CP_MERCIU_DBG_DATA_1"/>
	<reg32 offset="0x0829" name="CP_MERCIU_DBG_DATA_2"/>
	<reg32 offset="0x082a" name="CP_PFP_UCODE_DBG_ADDR"/>
	<reg32 offset="0x082b" name="CP_PFP_UCODE_DBG_DATA"/>
	<reg32 offset="0x082f" name="CP_ME_UCODE_DBG_ADDR"/>
	<reg32 offset="0x0830" name="CP_ME_UCODE_DBG_DATA"/>
	<reg32 offset="0x0831" name="CP_CNTL"/>
	<reg32 offset="0x0832" name="CP_PFP_ME_CNTL"/>
	<reg32 offset="0x0833" name="CP_CHICKEN_DBG"/>
	<reg32 offset="0x0835" name="CP_PFP_INSTR_BASE_LO"/>
	<reg32 offset="0x0836" name="CP_PFP_INSTR_BASE_HI"/>
	<reg32 offset="0x0838" name="CP_ME_INSTR_BASE_LO"/>
	<reg32 offset="0x0839" name="CP_ME_INSTR_BASE_HI"/>
	<reg32 offset="0x083b" name="CP_CONTEXT_SWITCH_CNTL"/>
	<reg32 offset="0x083c" name="CP_CONTEXT_SWITCH_RESTORE_ADDR_LO"/>
	<reg32 offset="0x083d" name="CP_CONTEXT_SWITCH_RESTORE_ADDR_HI"/>
	<reg32 offset="0x083e" name="CP_CONTEXT_SWITCH_SAVE_ADDR_LO"/>
	<reg32 offset="0x083f" name="CP_CONTEXT_SWITCH_SAVE_ADDR_HI"/>
	<reg32 offset="0x0840" name="CP_CONTEXT_SWITCH_SMMU_INFO_LO"/>
	<reg32 offset="0x0841" name="CP_CONTEXT_SWITCH_SMMU_INFO_HI"/>
	<reg32 offset="0x0860" name="CP_ADDR_MODE_CNTL"/>
	<reg32 offset="0x0b14" name="CP_ME_STAT_DATA"/>
	<reg32 offset="0x0b15" name="CP_WFI_PEND_CTR"/>
	<reg32 offset="0x0b18" name="CP_INTERRUPT_STATUS"/>
	<reg32 offset="0x0b1a" name="CP_HW_FAULT"/>
	<reg32 offset="0x0b1c" name="CP_PROTECT_STATUS"/>
	<reg32 offset="0x0b1f" name="CP_IB1_BASE"/>
	<reg32 offset="0x0b20" name="CP_IB1_BASE_HI"/>
	<reg32 offset="0x0b21" name="CP_IB1_BUFSZ"/>
	<reg32 offset="0x0b22" name="CP_IB2_BASE"/>
	<reg32 offset="0x0b23" name="CP_IB2_BASE_HI"/>
	<reg32 offset="0x0b24" name="CP_IB2_BUFSZ"/>
	<array offset="0x0b78" name="CP_SCRATCH" stride="1" length="8">
		<reg32 offset="0x0" name="REG" type="uint"/>
	</array>
	<array offset="0x0880" name="CP_PROTECT" stride="1" length="32">
		<reg32 offset="0x0" name="REG" type="adreno_cp_protect"/>
	</array>
	<reg32 offset="0x08a0" name="CP_PROTECT_CNTL"/>
	<reg32 offset="0x0b1b" name="CP_AHB_FAULT"/>
	<reg32 offset="0x0bb0" name="CP_PERFCTR_CP_SEL_0"/>
	<reg32 offset="0x0bb1" name="CP_PERFCTR_CP_SEL_1"/>
	<reg32 offset="0x0bb2" name="CP_PERFCTR_CP_SEL_2"/>
	<reg32 offset="0x0bb3" name="CP_PERFCTR_CP_SEL_3"/>
	<reg32 offset="0x0bb4" name="CP_PERFCTR_CP_SEL_4"/>
	<reg32 offset="0x0bb5" name="CP_PERFCTR_CP_SEL_5"/>
	<reg32 offset="0x0bb6" name="CP_PERFCTR_CP_SEL_6"/>
	<reg32 offset="0x0bb7" name="CP_PERFCTR_CP_SEL_7"/>
	<reg32 offset="0x0bc1" name="VSC_ADDR_MODE_CNTL"/>
	<reg32 offset="0x0bba" name="CP_POWERCTR_CP_SEL_0"/>
	<reg32 offset="0x0bbb" name="CP_POWERCTR_CP_SEL_1"/>
	<reg32 offset="0x0bbc" name="CP_POWERCTR_CP_SEL_2"/>
	<reg32 offset="0x0bbd" name="CP_POWERCTR_CP_SEL_3"/>

	<!-- RBBM registers -->
	<reg32 offset="0x0004" name="RBBM_CFG_DBGBUS_SEL_A"/>
	<reg32 offset="0x0005" name="RBBM_CFG_DBGBUS_SEL_B"/>
	<reg32 offset="0x0006" name="RBBM_CFG_DBGBUS_SEL_C"/>
	<reg32 offset="0x0007" name="RBBM_CFG_DBGBUS_SEL_D"/>
<!--
#define A5XX_RBBM_CFG_DBGBUS_SEL_PING_INDEX_SHIFT    0x0
#define A5XX_RBBM_CFG_DBGBUS_SEL_PING_BLK_SEL_SHIFT  0x8
#define A5XX_RBBM_CFG_DBGBUS_SEL_PONG_INDEX_SHIFT    0x10
#define A5XX_RBBM_CFG_DBGBUS_SEL_PONG_BLK_SEL_SHIFT  0x18
 -->
	<reg32 offset="0x0008" name="RBBM_CFG_DBGBUS_CNTLT"/>
	<reg32 offset="0x0009" name="RBBM_CFG_DBGBUS_CNTLM"/>
	<reg32 offset="0x0018" name="RBBM_CFG_DEBBUS_CTLTM_ENABLE_SHIFT"/>
	<reg32 offset="0x000a" name="RBBM_CFG_DBGBUS_OPL"/>
	<reg32 offset="0x000b" name="RBBM_CFG_DBGBUS_OPE"/>
	<reg32 offset="0x000c" name="RBBM_CFG_DBGBUS_IVTL_0"/>
	<reg32 offset="0x000d" name="RBBM_CFG_DBGBUS_IVTL_1"/>
	<reg32 offset="0x000e" name="RBBM_CFG_DBGBUS_IVTL_2"/>
	<reg32 offset="0x000f" name="RBBM_CFG_DBGBUS_IVTL_3"/>
	<reg32 offset="0x0010" name="RBBM_CFG_DBGBUS_MASKL_0"/>
	<reg32 offset="0x0011" name="RBBM_CFG_DBGBUS_MASKL_1"/>
	<reg32 offset="0x0012" name="RBBM_CFG_DBGBUS_MASKL_2"/>
	<reg32 offset="0x0013" name="RBBM_CFG_DBGBUS_MASKL_3"/>
	<reg32 offset="0x0014" name="RBBM_CFG_DBGBUS_BYTEL_0"/>
	<reg32 offset="0x0015" name="RBBM_CFG_DBGBUS_BYTEL_1"/>
	<reg32 offset="0x0016" name="RBBM_CFG_DBGBUS_IVTE_0"/>
	<reg32 offset="0x0017" name="RBBM_CFG_DBGBUS_IVTE_1"/>
	<reg32 offset="0x0018" name="RBBM_CFG_DBGBUS_IVTE_2"/>
	<reg32 offset="0x0019" name="RBBM_CFG_DBGBUS_IVTE_3"/>
	<reg32 offset="0x001a" name="RBBM_CFG_DBGBUS_MASKE_0"/>
	<reg32 offset="0x001b" name="RBBM_CFG_DBGBUS_MASKE_1"/>
	<reg32 offset="0x001c" name="RBBM_CFG_DBGBUS_MASKE_2"/>
	<reg32 offset="0x001d" name="RBBM_CFG_DBGBUS_MASKE_3"/>
	<reg32 offset="0x001e" name="RBBM_CFG_DBGBUS_NIBBLEE"/>
	<reg32 offset="0x001f" name="RBBM_CFG_DBGBUS_PTRC0"/>
	<reg32 offset="0x0020" name="RBBM_CFG_DBGBUS_PTRC1"/>
	<reg32 offset="0x0021" name="RBBM_CFG_DBGBUS_LOADREG"/>
	<reg32 offset="0x0022" name="RBBM_CFG_DBGBUS_IDX"/>
	<reg32 offset="0x0023" name="RBBM_CFG_DBGBUS_CLRC"/>
	<reg32 offset="0x0024" name="RBBM_CFG_DBGBUS_LOADIVT"/>
	<reg32 offset="0x002f" name="RBBM_INTERFACE_HANG_INT_CNTL"/>
	<reg32 offset="0x0037" name="RBBM_INT_CLEAR_CMD"/>
	<reg32 offset="0x0038" name="RBBM_INT_0_MASK">
		<bitfield name="RBBM_GPU_IDLE" pos="0"/>
		<bitfield name="RBBM_AHB_ERROR" pos="1"/>
		<bitfield name="RBBM_TRANSFER_TIMEOUT" pos="2"/>
		<bitfield name="RBBM_ME_MS_TIMEOUT" pos="3"/>
		<bitfield name="RBBM_PFP_MS_TIMEOUT" pos="4"/>
		<bitfield name="RBBM_ETS_MS_TIMEOUT" pos="5"/>
		<bitfield name="RBBM_ATB_ASYNC_OVERFLOW" pos="6"/>
		<bitfield name="RBBM_GPC_ERROR" pos="7"/>
		<bitfield name="CP_SW" pos="8"/>
		<bitfield name="CP_HW_ERROR" pos="9"/>
		<bitfield name="CP_CCU_FLUSH_DEPTH_TS" pos="10"/>
		<bitfield name="CP_CCU_FLUSH_COLOR_TS" pos="11"/>
		<bitfield name="CP_CCU_RESOLVE_TS" pos="12"/>
		<bitfield name="CP_IB2" pos="13"/>
		<bitfield name="CP_IB1" pos="14"/>
		<bitfield name="CP_RB" pos="15"/>
		<bitfield name="CP_RB_DONE_TS" pos="17"/>
		<bitfield name="CP_WT_DONE_TS" pos="18"/>
		<bitfield name="CP_CACHE_FLUSH_TS" pos="20"/>
		<bitfield name="RBBM_ATB_BUS_OVERFLOW" pos="22"/>
		<bitfield name="MISC_HANG_DETECT" pos="23"/>
		<bitfield name="UCHE_OOB_ACCESS" pos="24"/>
		<bitfield name="UCHE_TRAP_INTR" pos="25"/>
		<bitfield name="DEBBUS_INTR_0" pos="26"/>
		<bitfield name="DEBBUS_INTR_1" pos="27"/>
		<bitfield name="GPMU_VOLTAGE_DROOP" pos="28"/>
		<bitfield name="GPMU_FIRMWARE" pos="29"/>
		<bitfield name="ISDB_CPU_IRQ" pos="30"/>
		<bitfield name="ISDB_UNDER_DEBUG" pos="31"/>
	</reg32>
	<reg32 offset="0x003f" name="RBBM_AHB_DBG_CNTL"/>
	<reg32 offset="0x0041" name="RBBM_EXT_VBIF_DBG_CNTL"/>
	<reg32 offset="0x0043" name="RBBM_SW_RESET_CMD"/>
	<reg32 offset="0x0045" name="RBBM_BLOCK_SW_RESET_CMD"/>
	<reg32 offset="0x0046" name="RBBM_BLOCK_SW_RESET_CMD2"/>
	<reg32 offset="0x0048" name="RBBM_DBG_LO_HI_GPIO"/>
	<reg32 offset="0x0049" name="RBBM_EXT_TRACE_BUS_CNTL"/>
	<reg32 offset="0x004a" name="RBBM_CLOCK_CNTL_TP0"/>
	<reg32 offset="0x004b" name="RBBM_CLOCK_CNTL_TP1"/>
	<reg32 offset="0x004c" name="RBBM_CLOCK_CNTL_TP2"/>
	<reg32 offset="0x004d" name="RBBM_CLOCK_CNTL_TP3"/>
	<reg32 offset="0x004e" name="RBBM_CLOCK_CNTL2_TP0"/>
	<reg32 offset="0x004f" name="RBBM_CLOCK_CNTL2_TP1"/>
	<reg32 offset="0x0050" name="RBBM_CLOCK_CNTL2_TP2"/>
	<reg32 offset="0x0051" name="RBBM_CLOCK_CNTL2_TP3"/>
	<reg32 offset="0x0052" name="RBBM_CLOCK_CNTL3_TP0"/>
	<reg32 offset="0x0053" name="RBBM_CLOCK_CNTL3_TP1"/>
	<reg32 offset="0x0054" name="RBBM_CLOCK_CNTL3_TP2"/>
	<reg32 offset="0x0055" name="RBBM_CLOCK_CNTL3_TP3"/>
	<reg32 offset="0x0059" name="RBBM_READ_AHB_THROUGH_DBG"/>
	<reg32 offset="0x005a" name="RBBM_CLOCK_CNTL_UCHE"/>
	<reg32 offset="0x005b" name="RBBM_CLOCK_CNTL2_UCHE"/>
	<reg32 offset="0x005c" name="RBBM_CLOCK_CNTL3_UCHE"/>
	<reg32 offset="0x005d" name="RBBM_CLOCK_CNTL4_UCHE"/>
	<reg32 offset="0x005e" name="RBBM_CLOCK_HYST_UCHE"/>
	<reg32 offset="0x005f" name="RBBM_CLOCK_DELAY_UCHE"/>
	<reg32 offset="0x0060" name="RBBM_CLOCK_MODE_GPC"/>
	<reg32 offset="0x0061" name="RBBM_CLOCK_DELAY_GPC"/>
	<reg32 offset="0x0062" name="RBBM_CLOCK_HYST_GPC"/>
	<reg32 offset="0x0063" name="RBBM_CLOCK_CNTL_TSE_RAS_RBBM"/>
	<reg32 offset="0x0064" name="RBBM_CLOCK_HYST_TSE_RAS_RBBM"/>
	<reg32 offset="0x0065" name="RBBM_CLOCK_DELAY_TSE_RAS_RBBM"/>
	<reg32 offset="0x0066" name="RBBM_CLOCK_DELAY_HLSQ"/>
	<reg32 offset="0x0067" name="RBBM_CLOCK_CNTL"/>
	<reg32 offset="0x0068" name="RBBM_CLOCK_CNTL_SP0"/>
	<reg32 offset="0x0069" name="RBBM_CLOCK_CNTL_SP1"/>
	<reg32 offset="0x006a" name="RBBM_CLOCK_CNTL_SP2"/>
	<reg32 offset="0x006b" name="RBBM_CLOCK_CNTL_SP3"/>
	<reg32 offset="0x006c" name="RBBM_CLOCK_CNTL2_SP0"/>
	<reg32 offset="0x006d" name="RBBM_CLOCK_CNTL2_SP1"/>
	<reg32 offset="0x006e" name="RBBM_CLOCK_CNTL2_SP2"/>
	<reg32 offset="0x006f" name="RBBM_CLOCK_CNTL2_SP3"/>
	<reg32 offset="0x0070" name="RBBM_CLOCK_HYST_SP0"/>
	<reg32 offset="0x0071" name="RBBM_CLOCK_HYST_SP1"/>
	<reg32 offset="0x0072" name="RBBM_CLOCK_HYST_SP2"/>
	<reg32 offset="0x0073" name="RBBM_CLOCK_HYST_SP3"/>
	<reg32 offset="0x0074" name="RBBM_CLOCK_DELAY_SP0"/>
	<reg32 offset="0x0075" name="RBBM_CLOCK_DELAY_SP1"/>
	<reg32 offset="0x0076" name="RBBM_CLOCK_DELAY_SP2"/>
	<reg32 offset="0x0077" name="RBBM_CLOCK_DELAY_SP3"/>
	<reg32 offset="0x0078" name="RBBM_CLOCK_CNTL_RB0"/>
	<reg32 offset="0x0079" name="RBBM_CLOCK_CNTL_RB1"/>
	<reg32 offset="0x007a" name="RBBM_CLOCK_CNTL_RB2"/>
	<reg32 offset="0x007b" name="RBBM_CLOCK_CNTL_RB3"/>
	<reg32 offset="0x007c" name="RBBM_CLOCK_CNTL2_RB0"/>
	<reg32 offset="0x007d" name="RBBM_CLOCK_CNTL2_RB1"/>
	<reg32 offset="0x007e" name="RBBM_CLOCK_CNTL2_RB2"/>
	<reg32 offset="0x007f" name="RBBM_CLOCK_CNTL2_RB3"/>
	<reg32 offset="0x0080" name="RBBM_CLOCK_HYST_RAC"/>
	<reg32 offset="0x0081" name="RBBM_CLOCK_DELAY_RAC"/>
	<reg32 offset="0x0082" name="RBBM_CLOCK_CNTL_CCU0"/>
	<reg32 offset="0x0083" name="RBBM_CLOCK_CNTL_CCU1"/>
	<reg32 offset="0x0084" name="RBBM_CLOCK_CNTL_CCU2"/>
	<reg32 offset="0x0085" name="RBBM_CLOCK_CNTL_CCU3"/>
	<reg32 offset="0x0086" name="RBBM_CLOCK_HYST_RB_CCU0"/>
	<reg32 offset="0x0087" name="RBBM_CLOCK_HYST_RB_CCU1"/>
	<reg32 offset="0x0088" name="RBBM_CLOCK_HYST_RB_CCU2"/>
	<reg32 offset="0x0089" name="RBBM_CLOCK_HYST_RB_CCU3"/>
	<reg32 offset="0x008a" name="RBBM_CLOCK_CNTL_RAC"/>
	<reg32 offset="0x008b" name="RBBM_CLOCK_CNTL2_RAC"/>
	<reg32 offset="0x008c" name="RBBM_CLOCK_DELAY_RB_CCU_L1_0"/>
	<reg32 offset="0x008d" name="RBBM_CLOCK_DELAY_RB_CCU_L1_1"/>
	<reg32 offset="0x008e" name="RBBM_CLOCK_DELAY_RB_CCU_L1_2"/>
	<reg32 offset="0x008f" name="RBBM_CLOCK_DELAY_RB_CCU_L1_3"/>
	<reg32 offset="0x0090" name="RBBM_CLOCK_HYST_VFD"/>
	<reg32 offset="0x0091" name="RBBM_CLOCK_MODE_VFD"/>
	<reg32 offset="0x0092" name="RBBM_CLOCK_DELAY_VFD"/>
	<reg32 offset="0x0093" name="RBBM_AHB_CNTL0"/>
	<reg32 offset="0x0094" name="RBBM_AHB_CNTL1"/>
	<reg32 offset="0x0095" name="RBBM_AHB_CNTL2"/>
	<reg32 offset="0x0096" name="RBBM_AHB_CMD"/>
	<reg32 offset="0x009c" name="RBBM_INTERFACE_HANG_MASK_CNTL11"/>
	<reg32 offset="0x009d" name="RBBM_INTERFACE_HANG_MASK_CNTL12"/>
	<reg32 offset="0x009e" name="RBBM_INTERFACE_HANG_MASK_CNTL13"/>
	<reg32 offset="0x009f" name="RBBM_INTERFACE_HANG_MASK_CNTL14"/>
	<reg32 offset="0x00a0" name="RBBM_INTERFACE_HANG_MASK_CNTL15"/>
	<reg32 offset="0x00a1" name="RBBM_INTERFACE_HANG_MASK_CNTL16"/>
	<reg32 offset="0x00a2" name="RBBM_INTERFACE_HANG_MASK_CNTL17"/>
	<reg32 offset="0x00a3" name="RBBM_INTERFACE_HANG_MASK_CNTL18"/>
	<reg32 offset="0x00a4" name="RBBM_CLOCK_DELAY_TP0"/>
	<reg32 offset="0x00a5" name="RBBM_CLOCK_DELAY_TP1"/>
	<reg32 offset="0x00a6" name="RBBM_CLOCK_DELAY_TP2"/>
	<reg32 offset="0x00a7" name="RBBM_CLOCK_DELAY_TP3"/>
	<reg32 offset="0x00a8" name="RBBM_CLOCK_DELAY2_TP0"/>
	<reg32 offset="0x00a9" name="RBBM_CLOCK_DELAY2_TP1"/>
	<reg32 offset="0x00aa" name="RBBM_CLOCK_DELAY2_TP2"/>
	<reg32 offset="0x00ab" name="RBBM_CLOCK_DELAY2_TP3"/>
	<reg32 offset="0x00ac" name="RBBM_CLOCK_DELAY3_TP0"/>
	<reg32 offset="0x00ad" name="RBBM_CLOCK_DELAY3_TP1"/>
	<reg32 offset="0x00ae" name="RBBM_CLOCK_DELAY3_TP2"/>
	<reg32 offset="0x00af" name="RBBM_CLOCK_DELAY3_TP3"/>
	<reg32 offset="0x00b0" name="RBBM_CLOCK_HYST_TP0"/>
	<reg32 offset="0x00b1" name="RBBM_CLOCK_HYST_TP1"/>
	<reg32 offset="0x00b2" name="RBBM_CLOCK_HYST_TP2"/>
	<reg32 offset="0x00b3" name="RBBM_CLOCK_HYST_TP3"/>
	<reg32 offset="0x00b4" name="RBBM_CLOCK_HYST2_TP0"/>
	<reg32 offset="0x00b5" name="RBBM_CLOCK_HYST2_TP1"/>
	<reg32 offset="0x00b6" name="RBBM_CLOCK_HYST2_TP2"/>
	<reg32 offset="0x00b7" name="RBBM_CLOCK_HYST2_TP3"/>
	<reg32 offset="0x00b8" name="RBBM_CLOCK_HYST3_TP0"/>
	<reg32 offset="0x00b9" name="RBBM_CLOCK_HYST3_TP1"/>
	<reg32 offset="0x00ba" name="RBBM_CLOCK_HYST3_TP2"/>
	<reg32 offset="0x00bb" name="RBBM_CLOCK_HYST3_TP3"/>
	<reg32 offset="0x00c8" name="RBBM_CLOCK_CNTL_GPMU"/>
	<reg32 offset="0x00c9" name="RBBM_CLOCK_DELAY_GPMU"/>
	<reg32 offset="0x00ca" name="RBBM_CLOCK_HYST_GPMU"/>
	<reg32 offset="0x03a0" name="RBBM_PERFCTR_CP_0_LO"/>
	<reg32 offset="0x03a1" name="RBBM_PERFCTR_CP_0_HI"/>
	<reg32 offset="0x03a2" name="RBBM_PERFCTR_CP_1_LO"/>
	<reg32 offset="0x03a3" name="RBBM_PERFCTR_CP_1_HI"/>
	<reg32 offset="0x03a4" name="RBBM_PERFCTR_CP_2_LO"/>
	<reg32 offset="0x03a5" name="RBBM_PERFCTR_CP_2_HI"/>
	<reg32 offset="0x03a6" name="RBBM_PERFCTR_CP_3_LO"/>
	<reg32 offset="0x03a7" name="RBBM_PERFCTR_CP_3_HI"/>
	<reg32 offset="0x03a8" name="RBBM_PERFCTR_CP_4_LO"/>
	<reg32 offset="0x03a9" name="RBBM_PERFCTR_CP_4_HI"/>
	<reg32 offset="0x03aa" name="RBBM_PERFCTR_CP_5_LO"/>
	<reg32 offset="0x03ab" name="RBBM_PERFCTR_CP_5_HI"/>
	<reg32 offset="0x03ac" name="RBBM_PERFCTR_CP_6_LO"/>
	<reg32 offset="0x03ad" name="RBBM_PERFCTR_CP_6_HI"/>
	<reg32 offset="0x03ae" name="RBBM_PERFCTR_CP_7_LO"/>
	<reg32 offset="0x03af" name="RBBM_PERFCTR_CP_7_HI"/>
	<reg32 offset="0x03b0" name="RBBM_PERFCTR_RBBM_0_LO"/>
	<reg32 offset="0x03b1" name="RBBM_PERFCTR_RBBM_0_HI"/>
	<reg32 offset="0x03b2" name="RBBM_PERFCTR_RBBM_1_LO"/>
	<reg32 offset="0x03b3" name="RBBM_PERFCTR_RBBM_1_HI"/>
	<reg32 offset="0x03b4" name="RBBM_PERFCTR_RBBM_2_LO"/>
	<reg32 offset="0x03b5" name="RBBM_PERFCTR_RBBM_2_HI"/>
	<reg32 offset="0x03b6" name="RBBM_PERFCTR_RBBM_3_LO"/>
	<reg32 offset="0x03b7" name="RBBM_PERFCTR_RBBM_3_HI"/>
	<reg32 offset="0x03b8" name="RBBM_PERFCTR_PC_0_LO"/>
	<reg32 offset="0x03b9" name="RBBM_PERFCTR_PC_0_HI"/>
	<reg32 offset="0x03ba" name="RBBM_PERFCTR_PC_1_LO"/>
	<reg32 offset="0x03bb" name="RBBM_PERFCTR_PC_1_HI"/>
	<reg32 offset="0x03bc" name="RBBM_PERFCTR_PC_2_LO"/>
	<reg32 offset="0x03bd" name="RBBM_PERFCTR_PC_2_HI"/>
	<reg32 offset="0x03be" name="RBBM_PERFCTR_PC_3_LO"/>
	<reg32 offset="0x03bf" name="RBBM_PERFCTR_PC_3_HI"/>
	<reg32 offset="0x03c0" name="RBBM_PERFCTR_PC_4_LO"/>
	<reg32 offset="0x03c1" name="RBBM_PERFCTR_PC_4_HI"/>
	<reg32 offset="0x03c2" name="RBBM_PERFCTR_PC_5_LO"/>
	<reg32 offset="0x03c3" name="RBBM_PERFCTR_PC_5_HI"/>
	<reg32 offset="0x03c4" name="RBBM_PERFCTR_PC_6_LO"/>
	<reg32 offset="0x03c5" name="RBBM_PERFCTR_PC_6_HI"/>
	<reg32 offset="0x03c6" name="RBBM_PERFCTR_PC_7_LO"/>
	<reg32 offset="0x03c7" name="RBBM_PERFCTR_PC_7_HI"/>
	<reg32 offset="0x03c8" name="RBBM_PERFCTR_VFD_0_LO"/>
	<reg32 offset="0x03c9" name="RBBM_PERFCTR_VFD_0_HI"/>
	<reg32 offset="0x03ca" name="RBBM_PERFCTR_VFD_1_LO"/>
	<reg32 offset="0x03cb" name="RBBM_PERFCTR_VFD_1_HI"/>
	<reg32 offset="0x03cc" name="RBBM_PERFCTR_VFD_2_LO"/>
	<reg32 offset="0x03cd" name="RBBM_PERFCTR_VFD_2_HI"/>
	<reg32 offset="0x03ce" name="RBBM_PERFCTR_VFD_3_LO"/>
	<reg32 offset="0x03cf" name="RBBM_PERFCTR_VFD_3_HI"/>
	<reg32 offset="0x03d0" name="RBBM_PERFCTR_VFD_4_LO"/>
	<reg32 offset="0x03d1" name="RBBM_PERFCTR_VFD_4_HI"/>
	<reg32 offset="0x03d2" name="RBBM_PERFCTR_VFD_5_LO"/>
	<reg32 offset="0x03d3" name="RBBM_PERFCTR_VFD_5_HI"/>
	<reg32 offset="0x03d4" name="RBBM_PERFCTR_VFD_6_LO"/>
	<reg32 offset="0x03d5" name="RBBM_PERFCTR_VFD_6_HI"/>
	<reg32 offset="0x03d6" name="RBBM_PERFCTR_VFD_7_LO"/>
	<reg32 offset="0x03d7" name="RBBM_PERFCTR_VFD_7_HI"/>
	<reg32 offset="0x03d8" name="RBBM_PERFCTR_HLSQ_0_LO"/>
	<reg32 offset="0x03d9" name="RBBM_PERFCTR_HLSQ_0_HI"/>
	<reg32 offset="0x03da" name="RBBM_PERFCTR_HLSQ_1_LO"/>
	<reg32 offset="0x03db" name="RBBM_PERFCTR_HLSQ_1_HI"/>
	<reg32 offset="0x03dc" name="RBBM_PERFCTR_HLSQ_2_LO"/>
	<reg32 offset="0x03dd" name="RBBM_PERFCTR_HLSQ_2_HI"/>
	<reg32 offset="0x03de" name="RBBM_PERFCTR_HLSQ_3_LO"/>
	<reg32 offset="0x03df" name="RBBM_PERFCTR_HLSQ_3_HI"/>
	<reg32 offset="0x03e0" name="RBBM_PERFCTR_HLSQ_4_LO"/>
	<reg32 offset="0x03e1" name="RBBM_PERFCTR_HLSQ_4_HI"/>
	<reg32 offset="0x03e2" name="RBBM_PERFCTR_HLSQ_5_LO"/>
	<reg32 offset="0x03e3" name="RBBM_PERFCTR_HLSQ_5_HI"/>
	<reg32 offset="0x03e4" name="RBBM_PERFCTR_HLSQ_6_LO"/>
	<reg32 offset="0x03e5" name="RBBM_PERFCTR_HLSQ_6_HI"/>
	<reg32 offset="0x03e6" name="RBBM_PERFCTR_HLSQ_7_LO"/>
	<reg32 offset="0x03e7" name="RBBM_PERFCTR_HLSQ_7_HI"/>
	<reg32 offset="0x03e8" name="RBBM_PERFCTR_VPC_0_LO"/>
	<reg32 offset="0x03e9" name="RBBM_PERFCTR_VPC_0_HI"/>
	<reg32 offset="0x03ea" name="RBBM_PERFCTR_VPC_1_LO"/>
	<reg32 offset="0x03eb" name="RBBM_PERFCTR_VPC_1_HI"/>
	<reg32 offset="0x03ec" name="RBBM_PERFCTR_VPC_2_LO"/>
	<reg32 offset="0x03ed" name="RBBM_PERFCTR_VPC_2_HI"/>
	<reg32 offset="0x03ee" name="RBBM_PERFCTR_VPC_3_LO"/>
	<reg32 offset="0x03ef" name="RBBM_PERFCTR_VPC_3_HI"/>
	<reg32 offset="0x03f0" name="RBBM_PERFCTR_CCU_0_LO"/>
	<reg32 offset="0x03f1" name="RBBM_PERFCTR_CCU_0_HI"/>
	<reg32 offset="0x03f2" name="RBBM_PERFCTR_CCU_1_LO"/>
	<reg32 offset="0x03f3" name="RBBM_PERFCTR_CCU_1_HI"/>
	<reg32 offset="0x03f4" name="RBBM_PERFCTR_CCU_2_LO"/>
	<reg32 offset="0x03f5" name="RBBM_PERFCTR_CCU_2_HI"/>
	<reg32 offset="0x03f6" name="RBBM_PERFCTR_CCU_3_LO"/>
	<reg32 offset="0x03f7" name="RBBM_PERFCTR_CCU_3_HI"/>
	<reg32 offset="0x03f8" name="RBBM_PERFCTR_TSE_0_LO"/>
	<reg32 offset="0x03f9" name="RBBM_PERFCTR_TSE_0_HI"/>
	<reg32 offset="0x03fa" name="RBBM_PERFCTR_TSE_1_LO"/>
	<reg32 offset="0x03fb" name="RBBM_PERFCTR_TSE_1_HI"/>
	<reg32 offset="0x03fc" name="RBBM_PERFCTR_TSE_2_LO"/>
	<reg32 offset="0x03fd" name="RBBM_PERFCTR_TSE_2_HI"/>
	<reg32 offset="0x03fe" name="RBBM_PERFCTR_TSE_3_LO"/>
	<reg32 offset="0x03ff" name="RBBM_PERFCTR_TSE_3_HI"/>
	<reg32 offset="0x0400" name="RBBM_PERFCTR_RAS_0_LO"/>
	<reg32 offset="0x0401" name="RBBM_PERFCTR_RAS_0_HI"/>
	<reg32 offset="0x0402" name="RBBM_PERFCTR_RAS_1_LO"/>
	<reg32 offset="0x0403" name="RBBM_PERFCTR_RAS_1_HI"/>
	<reg32 offset="0x0404" name="RBBM_PERFCTR_RAS_2_LO"/>
	<reg32 offset="0x0405" name="RBBM_PERFCTR_RAS_2_HI"/>
	<reg32 offset="0x0406" name="RBBM_PERFCTR_RAS_3_LO"/>
	<reg32 offset="0x0407" name="RBBM_PERFCTR_RAS_3_HI"/>
	<reg32 offset="0x0408" name="RBBM_PERFCTR_UCHE_0_LO"/>
	<reg32 offset="0x0409" name="RBBM_PERFCTR_UCHE_0_HI"/>
	<reg32 offset="0x040a" name="RBBM_PERFCTR_UCHE_1_LO"/>
	<reg32 offset="0x040b" name="RBBM_PERFCTR_UCHE_1_HI"/>
	<reg32 offset="0x040c" name="RBBM_PERFCTR_UCHE_2_LO"/>
	<reg32 offset="0x040d" name="RBBM_PERFCTR_UCHE_2_HI"/>
	<reg32 offset="0x040e" name="RBBM_PERFCTR_UCHE_3_LO"/>
	<reg32 offset="0x040f" name="RBBM_PERFCTR_UCHE_3_HI"/>
	<reg32 offset="0x0410" name="RBBM_PERFCTR_UCHE_4_LO"/>
	<reg32 offset="0x0411" name="RBBM_PERFCTR_UCHE_4_HI"/>
	<reg32 offset="0x0412" name="RBBM_PERFCTR_UCHE_5_LO"/>
	<reg32 offset="0x0413" name="RBBM_PERFCTR_UCHE_5_HI"/>
	<reg32 offset="0x0414" name="RBBM_PERFCTR_UCHE_6_LO"/>
	<reg32 offset="0x0415" name="RBBM_PERFCTR_UCHE_6_HI"/>
	<reg32 offset="0x0416" name="RBBM_PERFCTR_UCHE_7_LO"/>
	<reg32 offset="0x0417" name="RBBM_PERFCTR_UCHE_7_HI"/>
	<reg32 offset="0x0418" name="RBBM_PERFCTR_TP_0_LO"/>
	<reg32 offset="0x0419" name="RBBM_PERFCTR_TP_0_HI"/>
	<reg32 offset="0x041a" name="RBBM_PERFCTR_TP_1_LO"/>
	<reg32 offset="0x041b" name="RBBM_PERFCTR_TP_1_HI"/>
	<reg32 offset="0x041c" name="RBBM_PERFCTR_TP_2_LO"/>
	<reg32 offset="0x041d" name="RBBM_PERFCTR_TP_2_HI"/>
	<reg32 offset="0x041e" name="RBBM_PERFCTR_TP_3_LO"/>
	<reg32 offset="0x041f" name="RBBM_PERFCTR_TP_3_HI"/>
	<reg32 offset="0x0420" name="RBBM_PERFCTR_TP_4_LO"/>
	<reg32 offset="0x0421" name="RBBM_PERFCTR_TP_4_HI"/>
	<reg32 offset="0x0422" name="RBBM_PERFCTR_TP_5_LO"/>
	<reg32 offset="0x0423" name="RBBM_PERFCTR_TP_5_HI"/>
	<reg32 offset="0x0424" name="RBBM_PERFCTR_TP_6_LO"/>
	<reg32 offset="0x0425" name="RBBM_PERFCTR_TP_6_HI"/>
	<reg32 offset="0x0426" name="RBBM_PERFCTR_TP_7_LO"/>
	<reg32 offset="0x0427" name="RBBM_PERFCTR_TP_7_HI"/>
	<reg32 offset="0x0428" name="RBBM_PERFCTR_SP_0_LO"/>
	<reg32 offset="0x0429" name="RBBM_PERFCTR_SP_0_HI"/>
	<reg32 offset="0x042a" name="RBBM_PERFCTR_SP_1_LO"/>
	<reg32 offset="0x042b" name="RBBM_PERFCTR_SP_1_HI"/>
	<reg32 offset="0x042c" name="RBBM_PERFCTR_SP_2_LO"/>
	<reg32 offset="0x042d" name="RBBM_PERFCTR_SP_2_HI"/>
	<reg32 offset="0x042e" name="RBBM_PERFCTR_SP_3_LO"/>
	<reg32 offset="0x042f" name="RBBM_PERFCTR_SP_3_HI"/>
	<reg32 offset="0x0430" name="RBBM_PERFCTR_SP_4_LO"/>
	<reg32 offset="0x0431" name="RBBM_PERFCTR_SP_4_HI"/>
	<reg32 offset="0x0432" name="RBBM_PERFCTR_SP_5_LO"/>
	<reg32 offset="0x0433" name="RBBM_PERFCTR_SP_5_HI"/>
	<reg32 offset="0x0434" name="RBBM_PERFCTR_SP_6_LO"/>
	<reg32 offset="0x0435" name="RBBM_PERFCTR_SP_6_HI"/>
	<reg32 offset="0x0436" name="RBBM_PERFCTR_SP_7_LO"/>
	<reg32 offset="0x0437" name="RBBM_PERFCTR_SP_7_HI"/>
	<reg32 offset="0x0438" name="RBBM_PERFCTR_SP_8_LO"/>
	<reg32 offset="0x0439" name="RBBM_PERFCTR_SP_8_HI"/>
	<reg32 offset="0x043a" name="RBBM_PERFCTR_SP_9_LO"/>
	<reg32 offset="0x043b" name="RBBM_PERFCTR_SP_9_HI"/>
	<reg32 offset="0x043c" name="RBBM_PERFCTR_SP_10_LO"/>
	<reg32 offset="0x043d" name="RBBM_PERFCTR_SP_10_HI"/>
	<reg32 offset="0x043e" name="RBBM_PERFCTR_SP_11_LO"/>
	<reg32 offset="0x043f" name="RBBM_PERFCTR_SP_11_HI"/>
	<reg32 offset="0x0440" name="RBBM_PERFCTR_RB_0_LO"/>
	<reg32 offset="0x0441" name="RBBM_PERFCTR_RB_0_HI"/>
	<reg32 offset="0x0442" name="RBBM_PERFCTR_RB_1_LO"/>
	<reg32 offset="0x0443" name="RBBM_PERFCTR_RB_1_HI"/>
	<reg32 offset="0x0444" name="RBBM_PERFCTR_RB_2_LO"/>
	<reg32 offset="0x0445" name="RBBM_PERFCTR_RB_2_HI"/>
	<reg32 offset="0x0446" name="RBBM_PERFCTR_RB_3_LO"/>
	<reg32 offset="0x0447" name="RBBM_PERFCTR_RB_3_HI"/>
	<reg32 offset="0x0448" name="RBBM_PERFCTR_RB_4_LO"/>
	<reg32 offset="0x0449" name="RBBM_PERFCTR_RB_4_HI"/>
	<reg32 offset="0x044a" name="RBBM_PERFCTR_RB_5_LO"/>
	<reg32 offset="0x044b" name="RBBM_PERFCTR_RB_5_HI"/>
	<reg32 offset="0x044c" name="RBBM_PERFCTR_RB_6_LO"/>
	<reg32 offset="0x044d" name="RBBM_PERFCTR_RB_6_HI"/>
	<reg32 offset="0x044e" name="RBBM_PERFCTR_RB_7_LO"/>
	<reg32 offset="0x044f" name="RBBM_PERFCTR_RB_7_HI"/>
	<reg32 offset="0x0450" name="RBBM_PERFCTR_VSC_0_LO"/>
	<reg32 offset="0x0451" name="RBBM_PERFCTR_VSC_0_HI"/>
	<reg32 offset="0x0452" name="RBBM_PERFCTR_VSC_1_LO"/>
	<reg32 offset="0x0453" name="RBBM_PERFCTR_VSC_1_HI"/>
	<reg32 offset="0x0454" name="RBBM_PERFCTR_LRZ_0_LO"/>
	<reg32 offset="0x0455" name="RBBM_PERFCTR_LRZ_0_HI"/>
	<reg32 offset="0x0456" name="RBBM_PERFCTR_LRZ_1_LO"/>
	<reg32 offset="0x0457" name="RBBM_PERFCTR_LRZ_1_HI"/>
	<reg32 offset="0x0458" name="RBBM_PERFCTR_LRZ_2_LO"/>
	<reg32 offset="0x0459" name="RBBM_PERFCTR_LRZ_2_HI"/>
	<reg32 offset="0x045a" name="RBBM_PERFCTR_LRZ_3_LO"/>
	<reg32 offset="0x045b" name="RBBM_PERFCTR_LRZ_3_HI"/>
	<reg32 offset="0x045c" name="RBBM_PERFCTR_CMP_0_LO"/>
	<reg32 offset="0x045d" name="RBBM_PERFCTR_CMP_0_HI"/>
	<reg32 offset="0x045e" name="RBBM_PERFCTR_CMP_1_LO"/>
	<reg32 offset="0x045f" name="RBBM_PERFCTR_CMP_1_HI"/>
	<reg32 offset="0x0460" name="RBBM_PERFCTR_CMP_2_LO"/>
	<reg32 offset="0x0461" name="RBBM_PERFCTR_CMP_2_HI"/>
	<reg32 offset="0x0462" name="RBBM_PERFCTR_CMP_3_LO"/>
	<reg32 offset="0x0463" name="RBBM_PERFCTR_CMP_3_HI"/>
	<reg32 offset="0x046b" name="RBBM_PERFCTR_RBBM_SEL_0"/>
	<reg32 offset="0x046c" name="RBBM_PERFCTR_RBBM_SEL_1"/>
	<reg32 offset="0x046d" name="RBBM_PERFCTR_RBBM_SEL_2"/>
	<reg32 offset="0x046e" name="RBBM_PERFCTR_RBBM_SEL_3"/>
	<reg32 offset="0x04d2" name="RBBM_ALWAYSON_COUNTER_LO"/>
	<reg32 offset="0x04d3" name="RBBM_ALWAYSON_COUNTER_HI"/>
	<reg32 offset="0x04f5" name="RBBM_STATUS">
		<bitfield high="31" low="31" name="GPU_BUSY_IGN_AHB" />
		<bitfield high="30" low="30" name="GPU_BUSY_IGN_AHB_CP" />
		<bitfield high="29" low="29" name="HLSQ_BUSY" />
		<bitfield high="28" low="28" name="VSC_BUSY" />
		<bitfield high="27" low="27" name="TPL1_BUSY" />
		<bitfield high="26" low="26" name="SP_BUSY" />
		<bitfield high="25" low="25" name="UCHE_BUSY" />
		<bitfield high="24" low="24" name="VPC_BUSY" />
		<bitfield high="23" low="23" name="VFDP_BUSY" />
		<bitfield high="22" low="22" name="VFD_BUSY" />
		<bitfield high="21" low="21" name="TESS_BUSY" />
		<bitfield high="20" low="20" name="PC_VSD_BUSY" />
		<bitfield high="19" low="19" name="PC_DCALL_BUSY" />
		<bitfield high="18" low="18" name="GPMU_SLAVE_BUSY" />
		<bitfield high="17" low="17" name="DCOM_BUSY" />
		<bitfield high="16" low="16" name="COM_BUSY" />
		<bitfield high="15" low="15" name="LRZ_BUZY" />
		<bitfield high="14" low="14" name="A2D_DSP_BUSY" />
		<bitfield high="13" low="13" name="CCUFCHE_BUSY" />
		<bitfield high="12" low="12" name="RB_BUSY" />
		<bitfield high="11" low="11" name="RAS_BUSY" />
		<bitfield high="10" low="10" name="TSE_BUSY" />
		<bitfield high="9" low="9" name="VBIF_BUSY" />
		<bitfield high="8" low="8" name="GPU_BUSY_IGN_AHB_HYST" />
		<bitfield high="7" low="7" name="CP_BUSY_IGN_HYST" />
		<bitfield high="6" low="6" name="CP_BUSY" />
		<bitfield high="5" low="5" name="GPMU_MASTER_BUSY" />
		<bitfield high="4" low="4" name="CP_CRASH_BUSY" />
		<bitfield high="3" low="3" name="CP_ETS_BUSY" />
		<bitfield high="2" low="2" name="CP_PFP_BUSY" />
		<bitfield high="1" low="1" name="CP_ME_BUSY" />
		<bitfield high="0" low="0" name="HI_BUSY" />
	</reg32>
	<reg32 offset="0x0530" name="RBBM_STATUS3"/>
	<reg32 offset="0x04e1" name="RBBM_INT_0_STATUS"/>
	<reg32 offset="0x04f0" name="RBBM_AHB_ME_SPLIT_STATUS"/>
	<reg32 offset="0x04f1" name="RBBM_AHB_PFP_SPLIT_STATUS"/>
	<reg32 offset="0x04f3" name="RBBM_AHB_ETS_SPLIT_STATUS"/>
	<reg32 offset="0x04f4" name="RBBM_AHB_ERROR_STATUS"/>
	<reg32 offset="0x0464" name="RBBM_PERFCTR_CNTL"/>
	<reg32 offset="0x0465" name="RBBM_PERFCTR_LOAD_CMD0"/>
	<reg32 offset="0x0466" name="RBBM_PERFCTR_LOAD_CMD1"/>
	<reg32 offset="0x0467" name="RBBM_PERFCTR_LOAD_CMD2"/>
	<reg32 offset="0x0468" name="RBBM_PERFCTR_LOAD_CMD3"/>
	<reg32 offset="0x0469" name="RBBM_PERFCTR_LOAD_VALUE_LO"/>
	<reg32 offset="0x046a" name="RBBM_PERFCTR_LOAD_VALUE_HI"/>
	<reg32 offset="0x046b" name="RBBM_PERFCTR_RBBM_SEL_0"/>
	<reg32 offset="0x046c" name="RBBM_PERFCTR_RBBM_SEL_1"/>
	<reg32 offset="0x046d" name="RBBM_PERFCTR_RBBM_SEL_2"/>
	<reg32 offset="0x046e" name="RBBM_PERFCTR_RBBM_SEL_3"/>
	<reg32 offset="0x046f" name="RBBM_PERFCTR_GPU_BUSY_MASKED"/>
	<reg32 offset="0x04ed" name="RBBM_AHB_ERROR"/>
	<reg32 offset="0x0504" name="RBBM_CFG_DBGBUS_EVENT_LOGIC"/>
	<reg32 offset="0x0505" name="RBBM_CFG_DBGBUS_OVER"/>
	<reg32 offset="0x0506" name="RBBM_CFG_DBGBUS_COUNT0"/>
	<reg32 offset="0x0507" name="RBBM_CFG_DBGBUS_COUNT1"/>
	<reg32 offset="0x0508" name="RBBM_CFG_DBGBUS_COUNT2"/>
	<reg32 offset="0x0509" name="RBBM_CFG_DBGBUS_COUNT3"/>
	<reg32 offset="0x050a" name="RBBM_CFG_DBGBUS_COUNT4"/>
	<reg32 offset="0x050b" name="RBBM_CFG_DBGBUS_COUNT5"/>
	<reg32 offset="0x050c" name="RBBM_CFG_DBGBUS_TRACE_ADDR"/>
	<reg32 offset="0x050d" name="RBBM_CFG_DBGBUS_TRACE_BUF0"/>
	<reg32 offset="0x050e" name="RBBM_CFG_DBGBUS_TRACE_BUF1"/>
	<reg32 offset="0x050f" name="RBBM_CFG_DBGBUS_TRACE_BUF2"/>
	<reg32 offset="0x0510" name="RBBM_CFG_DBGBUS_TRACE_BUF3"/>
	<reg32 offset="0x0511" name="RBBM_CFG_DBGBUS_TRACE_BUF4"/>
	<reg32 offset="0x0512" name="RBBM_CFG_DBGBUS_MISR0"/>
	<reg32 offset="0x0513" name="RBBM_CFG_DBGBUS_MISR1"/>
	<reg32 offset="0x0533" name="RBBM_ISDB_CNT"/>
	<reg32 offset="0xf000" name="RBBM_SECVID_TRUST_CONFIG"/>
	<reg32 offset="0xf400" name="RBBM_SECVID_TRUST_CNTL"/>
	<reg32 offset="0xf800" name="RBBM_SECVID_TSB_TRUSTED_BASE_LO"/>
	<reg32 offset="0xf801" name="RBBM_SECVID_TSB_TRUSTED_BASE_HI"/>
	<reg32 offset="0xf802" name="RBBM_SECVID_TSB_TRUSTED_SIZE"/>
	<reg32 offset="0xf803" name="RBBM_SECVID_TSB_CNTL"/>
	<reg32 offset="0xf804" name="RBBM_SECVID_TSB_COMP_STATUS_LO"/>
	<reg32 offset="0xf805" name="RBBM_SECVID_TSB_COMP_STATUS_HI"/>
	<reg32 offset="0xf806" name="RBBM_SECVID_TSB_UCHE_STATUS_LO"/>
	<reg32 offset="0xf807" name="RBBM_SECVID_TSB_UCHE_STATUS_HI"/>
	<reg32 offset="0xf810" name="RBBM_SECVID_TSB_ADDR_MODE_CNTL"/>

	<!-- VSC registers -->
	<reg32 offset="0x0c00" name="VSC_PIPE_DATA_LENGTH_0"/>
	<reg32 offset="0x0c60" name="VSC_PERFCTR_VSC_SEL_0"/>
	<reg32 offset="0x0c61" name="VSC_PERFCTR_VSC_SEL_1"/>
	<reg32 offset="0x0cdd" name="VSC_BIN_SIZE" type="adreno_reg_xy"/>

	<!-- GRAS registers -->
	<reg32 offset="0x0c81" name="GRAS_ADDR_MODE_CNTL"/>
	<reg32 offset="0x0c90" name="GRAS_PERFCTR_TSE_SEL_0"/>
	<reg32 offset="0x0c91" name="GRAS_PERFCTR_TSE_SEL_1"/>
	<reg32 offset="0x0c92" name="GRAS_PERFCTR_TSE_SEL_2"/>
	<reg32 offset="0x0c93" name="GRAS_PERFCTR_TSE_SEL_3"/>
	<reg32 offset="0x0c94" name="GRAS_PERFCTR_RAS_SEL_0"/>
	<reg32 offset="0x0c95" name="GRAS_PERFCTR_RAS_SEL_1"/>
	<reg32 offset="0x0c96" name="GRAS_PERFCTR_RAS_SEL_2"/>
	<reg32 offset="0x0c97" name="GRAS_PERFCTR_RAS_SEL_3"/>
	<reg32 offset="0x0c98" name="GRAS_PERFCTR_LRZ_SEL_0"/>
	<reg32 offset="0x0c99" name="GRAS_PERFCTR_LRZ_SEL_1"/>
	<reg32 offset="0x0c9a" name="GRAS_PERFCTR_LRZ_SEL_2"/>
	<reg32 offset="0x0c9b" name="GRAS_PERFCTR_LRZ_SEL_3"/>

	<reg32 offset="0x0cc4" name="RB_DBG_ECO_CNTL"/> <!-- always 00100000? -->
	<reg32 offset="0x0cc5" name="RB_ADDR_MODE_CNTL"/>
	<reg32 offset="0x0cc6" name="RB_MODE_CNTL"/> <!-- always 00000044? -->
	<reg32 offset="0x0cc7" name="RB_CCU_CNTL"/> <!-- always b0056080 or 10000000? -->
	<reg32 offset="0x0cd0" name="RB_PERFCTR_RB_SEL_0"/>
	<reg32 offset="0x0cd1" name="RB_PERFCTR_RB_SEL_1"/>
	<reg32 offset="0x0cd2" name="RB_PERFCTR_RB_SEL_2"/>
	<reg32 offset="0x0cd3" name="RB_PERFCTR_RB_SEL_3"/>
	<reg32 offset="0x0cd4" name="RB_PERFCTR_RB_SEL_4"/>
	<reg32 offset="0x0cd5" name="RB_PERFCTR_RB_SEL_5"/>
	<reg32 offset="0x0cd6" name="RB_PERFCTR_RB_SEL_6"/>
	<reg32 offset="0x0cd7" name="RB_PERFCTR_RB_SEL_7"/>
	<reg32 offset="0x0cd8" name="RB_PERFCTR_CCU_SEL_0"/>
	<reg32 offset="0x0cd9" name="RB_PERFCTR_CCU_SEL_1"/>
	<reg32 offset="0x0cda" name="RB_PERFCTR_CCU_SEL_2"/>
	<reg32 offset="0x0cdb" name="RB_PERFCTR_CCU_SEL_3"/>
	<reg32 offset="0x0ce0" name="RB_POWERCTR_RB_SEL_0"/>
	<reg32 offset="0x0ce1" name="RB_POWERCTR_RB_SEL_1"/>
	<reg32 offset="0x0ce2" name="RB_POWERCTR_RB_SEL_2"/>
	<reg32 offset="0x0ce3" name="RB_POWERCTR_RB_SEL_3"/>
	<reg32 offset="0x0ce4" name="RB_POWERCTR_CCU_SEL_0"/>
	<reg32 offset="0x0ce5" name="RB_POWERCTR_CCU_SEL_1"/>
	<reg32 offset="0x0cec" name="RB_PERFCTR_CMP_SEL_0"/>
	<reg32 offset="0x0ced" name="RB_PERFCTR_CMP_SEL_1"/>
	<reg32 offset="0x0cee" name="RB_PERFCTR_CMP_SEL_2"/>
	<reg32 offset="0x0cef" name="RB_PERFCTR_CMP_SEL_3"/>

	<reg32 offset="0x0d00" name="PC_DBG_ECO_CNTL">
		<bitfield name="TWOPASSUSEWFI" pos="8" type="boolean"/>
	</reg32>
	<reg32 offset="0x0d01" name="PC_ADDR_MODE_CNTL"/>
	<reg32 offset="0x0d02" name="PC_MODE_CNTL"/> <!-- always 0000001f? -->
	<reg32 offset="0x0d08" name="UNKNOWN_0D08"/> <!-- always 00000000? -->
	<reg32 offset="0x0d09" name="UNKNOWN_0D09"/> <!-- always 00000000? -->
	<reg32 offset="0x0d10" name="PC_PERFCTR_PC_SEL_0"/>
	<reg32 offset="0x0d11" name="PC_PERFCTR_PC_SEL_1"/>
	<reg32 offset="0x0d12" name="PC_PERFCTR_PC_SEL_2"/>
	<reg32 offset="0x0d13" name="PC_PERFCTR_PC_SEL_3"/>
	<reg32 offset="0x0d14" name="PC_PERFCTR_PC_SEL_4"/>
	<reg32 offset="0x0d15" name="PC_PERFCTR_PC_SEL_5"/>
	<reg32 offset="0x0d16" name="PC_PERFCTR_PC_SEL_6"/>
	<reg32 offset="0x0d17" name="PC_PERFCTR_PC_SEL_7"/>

	<reg32 offset="0x0e00" name="HLSQ_TIMEOUT_THRESHOLD_0"/>
	<reg32 offset="0x0e01" name="HLSQ_TIMEOUT_THRESHOLD_1"/>
	<reg32 offset="0x0e05" name="HLSQ_ADDR_MODE_CNTL"/>
	<reg32 offset="0x0e06" name="HLSQ_MODE_CNTL"/> <!-- always 00000001? -->
	<reg32 offset="0x0e10" name="HLSQ_PERFCTR_HLSQ_SEL_0"/>
	<reg32 offset="0x0e11" name="HLSQ_PERFCTR_HLSQ_SEL_1"/>
	<reg32 offset="0x0e12" name="HLSQ_PERFCTR_HLSQ_SEL_2"/>
	<reg32 offset="0x0e13" name="HLSQ_PERFCTR_HLSQ_SEL_3"/>
	<reg32 offset="0x0e14" name="HLSQ_PERFCTR_HLSQ_SEL_4"/>
	<reg32 offset="0x0e15" name="HLSQ_PERFCTR_HLSQ_SEL_5"/>
	<reg32 offset="0x0e16" name="HLSQ_PERFCTR_HLSQ_SEL_6"/>
	<reg32 offset="0x0e17" name="HLSQ_PERFCTR_HLSQ_SEL_7"/>
	<reg32 offset="0x0f08" name="HLSQ_SPTP_RDSEL"/>
	<reg32 offset="0xbc00" name="HLSQ_DBG_READ_SEL"/>
	<reg32 offset="0xa000" name="HLSQ_DBG_AHB_READ_APERTURE"/>

	<reg32 offset="0x0e41" name="VFD_ADDR_MODE_CNTL"/>
	<reg32 offset="0x0e42" name="VFD_MODE_CNTL"/> <!-- always 00000000? -->
	<reg32 offset="0x0e50" name="VFD_PERFCTR_VFD_SEL_0"/>
	<reg32 offset="0x0e51" name="VFD_PERFCTR_VFD_SEL_1"/>
	<reg32 offset="0x0e52" name="VFD_PERFCTR_VFD_SEL_2"/>
	<reg32 offset="0x0e53" name="VFD_PERFCTR_VFD_SEL_3"/>
	<reg32 offset="0x0e54" name="VFD_PERFCTR_VFD_SEL_4"/>
	<reg32 offset="0x0e55" name="VFD_PERFCTR_VFD_SEL_5"/>
	<reg32 offset="0x0e56" name="VFD_PERFCTR_VFD_SEL_6"/>
	<reg32 offset="0x0e57" name="VFD_PERFCTR_VFD_SEL_7"/>
	<reg32 offset="0x0e60" name="VPC_DBG_ECO_CNTL"/> <!-- always 00000400? -->
	<reg32 offset="0x0e61" name="VPC_ADDR_MODE_CNTL"/>
	<reg32 offset="0x0e62" name="VPC_MODE_CNTL"/>
	<reg32 offset="0x0e64" name="VPC_PERFCTR_VPC_SEL_0"/>
	<reg32 offset="0x0e65" name="VPC_PERFCTR_VPC_SEL_1"/>
	<reg32 offset="0x0e66" name="VPC_PERFCTR_VPC_SEL_2"/>
	<reg32 offset="0x0e67" name="VPC_PERFCTR_VPC_SEL_3"/>

	<reg32 offset="0x0e80" name="UCHE_ADDR_MODE_CNTL"/>
	<reg32 offset="0x0e82" name="UCHE_SVM_CNTL"/>
	<reg32 offset="0x0e87" name="UCHE_WRITE_THRU_BASE_LO"/>
	<reg32 offset="0x0e88" name="UCHE_WRITE_THRU_BASE_HI"/>
	<reg32 offset="0x0e89" name="UCHE_TRAP_BASE_LO"/>
	<reg32 offset="0x0e8a" name="UCHE_TRAP_BASE_HI"/>
	<reg32 offset="0x0e8b" name="UCHE_GMEM_RANGE_MIN_LO"/>
	<reg32 offset="0x0e8c" name="UCHE_GMEM_RANGE_MIN_HI"/>
	<reg32 offset="0x0e8d" name="UCHE_GMEM_RANGE_MAX_LO"/>
	<reg32 offset="0x0e8e" name="UCHE_GMEM_RANGE_MAX_HI"/>
	<reg32 offset="0x0e8f" name="UCHE_DBG_ECO_CNTL_2"/>
	<reg32 offset="0x0e90" name="UCHE_DBG_ECO_CNTL"/>
	<reg32 offset="0x0e91" name="UCHE_CACHE_INVALIDATE_MIN_LO"/>
	<reg32 offset="0x0e92" name="UCHE_CACHE_INVALIDATE_MIN_HI"/>
	<reg32 offset="0x0e93" name="UCHE_CACHE_INVALIDATE_MAX_LO"/>
	<reg32 offset="0x0e94" name="UCHE_CACHE_INVALIDATE_MAX_HI"/>
	<reg32 offset="0x0e95" name="UCHE_CACHE_INVALIDATE"/>
	<reg32 offset="0x0e96" name="UCHE_CACHE_WAYS"/>
	<reg32 offset="0x0ea0" name="UCHE_PERFCTR_UCHE_SEL_0"/>
	<reg32 offset="0x0ea1" name="UCHE_PERFCTR_UCHE_SEL_1"/>
	<reg32 offset="0x0ea2" name="UCHE_PERFCTR_UCHE_SEL_2"/>
	<reg32 offset="0x0ea3" name="UCHE_PERFCTR_UCHE_SEL_3"/>
	<reg32 offset="0x0ea4" name="UCHE_PERFCTR_UCHE_SEL_4"/>
	<reg32 offset="0x0ea5" name="UCHE_PERFCTR_UCHE_SEL_5"/>
	<reg32 offset="0x0ea6" name="UCHE_PERFCTR_UCHE_SEL_6"/>
	<reg32 offset="0x0ea7" name="UCHE_PERFCTR_UCHE_SEL_7"/>
	<reg32 offset="0x0ea8" name="UCHE_POWERCTR_UCHE_SEL_0"/>
	<reg32 offset="0x0ea9" name="UCHE_POWERCTR_UCHE_SEL_1"/>
	<reg32 offset="0x0eaa" name="UCHE_POWERCTR_UCHE_SEL_2"/>
	<reg32 offset="0x0eab" name="UCHE_POWERCTR_UCHE_SEL_3"/>
	<reg32 offset="0x0eb1" name="UCHE_TRAP_LOG_LO"/>
	<reg32 offset="0x0eb2" name="UCHE_TRAP_LOG_HI"/>

	<reg32 offset="0x0ec0" name="SP_DBG_ECO_CNTL"/>
	<reg32 offset="0x0ec1" name="SP_ADDR_MODE_CNTL"/>
	<reg32 offset="0x0ec2" name="SP_MODE_CNTL"/> <!-- always 0000001e? -->
	<reg32 offset="0x0ed0" name="SP_PERFCTR_SP_SEL_0"/>
	<reg32 offset="0x0ed1" name="SP_PERFCTR_SP_SEL_1"/>
	<reg32 offset="0x0ed2" name="SP_PERFCTR_SP_SEL_2"/>
	<reg32 offset="0x0ed3" name="SP_PERFCTR_SP_SEL_3"/>
	<reg32 offset="0x0ed4" name="SP_PERFCTR_SP_SEL_4"/>
	<reg32 offset="0x0ed5" name="SP_PERFCTR_SP_SEL_5"/>
	<reg32 offset="0x0ed6" name="SP_PERFCTR_SP_SEL_6"/>
	<reg32 offset="0x0ed7" name="SP_PERFCTR_SP_SEL_7"/>
	<reg32 offset="0x0ed8" name="SP_PERFCTR_SP_SEL_8"/>
	<reg32 offset="0x0ed9" name="SP_PERFCTR_SP_SEL_9"/>
	<reg32 offset="0x0eda" name="SP_PERFCTR_SP_SEL_10"/>
	<reg32 offset="0x0edb" name="SP_PERFCTR_SP_SEL_11"/>
	<reg32 offset="0x0edc" name="SP_POWERCTR_SP_SEL_0"/>
	<reg32 offset="0x0edd" name="SP_POWERCTR_SP_SEL_1"/>
	<reg32 offset="0x0ede" name="SP_POWERCTR_SP_SEL_2"/>
	<reg32 offset="0x0edf" name="SP_POWERCTR_SP_SEL_3"/>

	<reg32 offset="0x0f01" name="TPL1_ADDR_MODE_CNTL"/>
	<reg32 offset="0x0f02" name="TPL1_MODE_CNTL"/> <!-- always 00000544? -->
	<reg32 offset="0x0f10" name="TPL1_PERFCTR_TP_SEL_0"/>
	<reg32 offset="0x0f11" name="TPL1_PERFCTR_TP_SEL_1"/>
	<reg32 offset="0x0f12" name="TPL1_PERFCTR_TP_SEL_2"/>
	<reg32 offset="0x0f13" name="TPL1_PERFCTR_TP_SEL_3"/>
	<reg32 offset="0x0f14" name="TPL1_PERFCTR_TP_SEL_4"/>
	<reg32 offset="0x0f15" name="TPL1_PERFCTR_TP_SEL_5"/>
	<reg32 offset="0x0f16" name="TPL1_PERFCTR_TP_SEL_6"/>
	<reg32 offset="0x0f17" name="TPL1_PERFCTR_TP_SEL_7"/>
	<reg32 offset="0x0f18" name="TPL1_POWERCTR_TP_SEL_0"/>
	<reg32 offset="0x0f19" name="TPL1_POWERCTR_TP_SEL_1"/>
	<reg32 offset="0x0f1a" name="TPL1_POWERCTR_TP_SEL_2"/>
	<reg32 offset="0x0f1b" name="TPL1_POWERCTR_TP_SEL_3"/>

	<reg32 offset="0x3000" name="VBIF_VERSION"/>
	<reg32 offset="0x3001" name="VBIF_CLKON"/>
<!--
#define A5XX_VBIF_CLKON_FORCE_ON_TESTBUS_MASK   0x1
#define A5XX_VBIF_CLKON_FORCE_ON_TESTBUS_SHIFT  0x1
 -->
	<reg32 offset="0x3028" name="VBIF_ABIT_SORT"/>
	<reg32 offset="0x3029" name="VBIF_ABIT_SORT_CONF"/>
	<reg32 offset="0x3049" name="VBIF_ROUND_ROBIN_QOS_ARB"/>
	<reg32 offset="0x302a" name="VBIF_GATE_OFF_WRREQ_EN"/>
	<reg32 offset="0x302c" name="VBIF_IN_RD_LIM_CONF0"/>
	<reg32 offset="0x302d" name="VBIF_IN_RD_LIM_CONF1"/>
	<reg32 offset="0x3080" name="VBIF_XIN_HALT_CTRL0"/>
<!--
#define A5XX_VBIF_XIN_HALT_CTRL0_MASK	   0xF
#define A510_VBIF_XIN_HALT_CTRL0_MASK	   0x7
 -->
	<reg32 offset="0x3081" name="VBIF_XIN_HALT_CTRL1"/>
	<reg32 offset="0x3084" name="VBIF_TEST_BUS_OUT_CTRL"/>
<!--
#define A5XX_VBIF_TEST_BUS_OUT_CTRL_EN_MASK    0x1
#define A5XX_VBIF_TEST_BUS_OUT_CTRL_EN_SHIFT   0x0
 -->
	<reg32 offset="0x3085" name="VBIF_TEST_BUS1_CTRL0"/>
	<reg32 offset="0x3086" name="VBIF_TEST_BUS1_CTRL1"/>
<!--
#define A5XX_VBIF_TEST_BUS1_CTRL1_DATA_SEL_MASK  0xF
#define A5XX_VBIF_TEST_BUS1_CTRL1_DATA_SEL_SHIFT 0x0
 -->
	<reg32 offset="0x3087" name="VBIF_TEST_BUS2_CTRL0"/>
	<reg32 offset="0x3088" name="VBIF_TEST_BUS2_CTRL1"/>
<!--
#define A5XX_VBIF_TEST_BUS2_CTRL1_DATA_SEL_MASK     0xF
#define A5XX_VBIF_TEST_BUS2_CTRL1_DATA_SEL_SHIFT    0x0
 -->
	<reg32 offset="0x308c" name="VBIF_TEST_BUS_OUT"/>
	<reg32 offset="0x30d0" name="VBIF_PERF_CNT_SEL0"/>
	<reg32 offset="0x30d1" name="VBIF_PERF_CNT_SEL1"/>
	<reg32 offset="0x30d2" name="VBIF_PERF_CNT_SEL2"/>
	<reg32 offset="0x30d3" name="VBIF_PERF_CNT_SEL3"/>
	<reg32 offset="0x30d8" name="VBIF_PERF_CNT_LOW0"/>
	<reg32 offset="0x30d9" name="VBIF_PERF_CNT_LOW1"/>
	<reg32 offset="0x30da" name="VBIF_PERF_CNT_LOW2"/>
	<reg32 offset="0x30db" name="VBIF_PERF_CNT_LOW3"/>
	<reg32 offset="0x30e0" name="VBIF_PERF_CNT_HIGH0"/>
	<reg32 offset="0x30e1" name="VBIF_PERF_CNT_HIGH1"/>
	<reg32 offset="0x30e2" name="VBIF_PERF_CNT_HIGH2"/>
	<reg32 offset="0x30e3" name="VBIF_PERF_CNT_HIGH3"/>
	<reg32 offset="0x3100" name="VBIF_PERF_PWR_CNT_EN0"/>
	<reg32 offset="0x3101" name="VBIF_PERF_PWR_CNT_EN1"/>
	<reg32 offset="0x3102" name="VBIF_PERF_PWR_CNT_EN2"/>
	<reg32 offset="0x3110" name="VBIF_PERF_PWR_CNT_LOW0"/>
	<reg32 offset="0x3111" name="VBIF_PERF_PWR_CNT_LOW1"/>
	<reg32 offset="0x3112" name="VBIF_PERF_PWR_CNT_LOW2"/>
	<reg32 offset="0x3118" name="VBIF_PERF_PWR_CNT_HIGH0"/>
	<reg32 offset="0x3119" name="VBIF_PERF_PWR_CNT_HIGH1"/>
	<reg32 offset="0x311a" name="VBIF_PERF_PWR_CNT_HIGH2"/>

	<reg32 offset="0x8800" name="GPMU_INST_RAM_BASE"/>
	<reg32 offset="0x9800" name="GPMU_DATA_RAM_BASE"/>
	<reg32 offset="0xa881" name="GPMU_SP_POWER_CNTL"/>
	<reg32 offset="0xa886" name="GPMU_RBCCU_CLOCK_CNTL"/>
	<reg32 offset="0xa887" name="GPMU_RBCCU_POWER_CNTL"/>
	<reg32 offset="0xa88b" name="GPMU_SP_PWR_CLK_STATUS">
		<bitfield name="PWR_ON" pos="20" type="boolean"/>
	</reg32>
	<reg32 offset="0xa88d" name="GPMU_RBCCU_PWR_CLK_STATUS">
		<bitfield name="PWR_ON" pos="20" type="boolean"/>
	</reg32>
	<reg32 offset="0xa891" name="GPMU_PWR_COL_STAGGER_DELAY"/>
	<reg32 offset="0xa892" name="GPMU_PWR_COL_INTER_FRAME_CTRL"/>
	<reg32 offset="0xa893" name="GPMU_PWR_COL_INTER_FRAME_HYST"/>
	<reg32 offset="0xa894" name="GPMU_PWR_COL_BINNING_CTRL"/>
	<reg32 offset="0xa8a3" name="GPMU_CLOCK_THROTTLE_CTRL"/>
	<reg32 offset="0xa8c1" name="GPMU_WFI_CONFIG"/>
	<reg32 offset="0xa8d6" name="GPMU_RBBM_INTR_INFO"/>
	<reg32 offset="0xa8d8" name="GPMU_CM3_SYSRESET"/>
	<reg32 offset="0xa8e0" name="GPMU_GENERAL_0"/>
	<reg32 offset="0xa8e1" name="GPMU_GENERAL_1"/>

<!--
/* COUNTABLE FOR SP PERFCOUNTER */
#define A5XX_SP_ALU_ACTIVE_CYCLES          0x1
#define A5XX_SP0_ICL1_MISSES               0x35
#define A5XX_SP_FS_CFLOW_INSTRUCTIONS      0x27

/* COUNTABLE FOR TSE PERFCOUNTER */
#define A5XX_TSE_INPUT_PRIM_NUM            0x6
 -->
	<reg32 offset="0xa840" name="SP_POWER_COUNTER_0_LO"/>
	<reg32 offset="0xa841" name="SP_POWER_COUNTER_0_HI"/>
	<reg32 offset="0xa842" name="SP_POWER_COUNTER_1_LO"/>
	<reg32 offset="0xa843" name="SP_POWER_COUNTER_1_HI"/>
	<reg32 offset="0xa844" name="SP_POWER_COUNTER_2_LO"/>
	<reg32 offset="0xa845" name="SP_POWER_COUNTER_2_HI"/>
	<reg32 offset="0xa846" name="SP_POWER_COUNTER_3_LO"/>
	<reg32 offset="0xa847" name="SP_POWER_COUNTER_3_HI"/>
	<reg32 offset="0xa848" name="TP_POWER_COUNTER_0_LO"/>
	<reg32 offset="0xa849" name="TP_POWER_COUNTER_0_HI"/>
	<reg32 offset="0xa84a" name="TP_POWER_COUNTER_1_LO"/>
	<reg32 offset="0xa84b" name="TP_POWER_COUNTER_1_HI"/>
	<reg32 offset="0xa84c" name="TP_POWER_COUNTER_2_LO"/>
	<reg32 offset="0xa84d" name="TP_POWER_COUNTER_2_HI"/>
	<reg32 offset="0xa84e" name="TP_POWER_COUNTER_3_LO"/>
	<reg32 offset="0xa84f" name="TP_POWER_COUNTER_3_HI"/>
	<reg32 offset="0xa850" name="RB_POWER_COUNTER_0_LO"/>
	<reg32 offset="0xa851" name="RB_POWER_COUNTER_0_HI"/>
	<reg32 offset="0xa852" name="RB_POWER_COUNTER_1_LO"/>
	<reg32 offset="0xa853" name="RB_POWER_COUNTER_1_HI"/>
	<reg32 offset="0xa854" name="RB_POWER_COUNTER_2_LO"/>
	<reg32 offset="0xa855" name="RB_POWER_COUNTER_2_HI"/>
	<reg32 offset="0xa856" name="RB_POWER_COUNTER_3_LO"/>
	<reg32 offset="0xa857" name="RB_POWER_COUNTER_3_HI"/>
	<reg32 offset="0xa858" name="CCU_POWER_COUNTER_0_LO"/>
	<reg32 offset="0xa859" name="CCU_POWER_COUNTER_0_HI"/>
	<reg32 offset="0xa85a" name="CCU_POWER_COUNTER_1_LO"/>
	<reg32 offset="0xa85b" name="CCU_POWER_COUNTER_1_HI"/>
	<reg32 offset="0xa85c" name="UCHE_POWER_COUNTER_0_LO"/>
	<reg32 offset="0xa85d" name="UCHE_POWER_COUNTER_0_HI"/>
	<reg32 offset="0xa85e" name="UCHE_POWER_COUNTER_1_LO"/>
	<reg32 offset="0xa85f" name="UCHE_POWER_COUNTER_1_HI"/>
	<reg32 offset="0xa860" name="UCHE_POWER_COUNTER_2_LO"/>
	<reg32 offset="0xa861" name="UCHE_POWER_COUNTER_2_HI"/>
	<reg32 offset="0xa862" name="UCHE_POWER_COUNTER_3_LO"/>
	<reg32 offset="0xa863" name="UCHE_POWER_COUNTER_3_HI"/>
	<reg32 offset="0xa864" name="CP_POWER_COUNTER_0_LO"/>
	<reg32 offset="0xa865" name="CP_POWER_COUNTER_0_HI"/>
	<reg32 offset="0xa866" name="CP_POWER_COUNTER_1_LO"/>
	<reg32 offset="0xa867" name="CP_POWER_COUNTER_1_HI"/>
	<reg32 offset="0xa868" name="CP_POWER_COUNTER_2_LO"/>
	<reg32 offset="0xa869" name="CP_POWER_COUNTER_2_HI"/>
	<reg32 offset="0xa86a" name="CP_POWER_COUNTER_3_LO"/>
	<reg32 offset="0xa86b" name="CP_POWER_COUNTER_3_HI"/>
	<reg32 offset="0xa86c" name="GPMU_POWER_COUNTER_0_LO"/>
	<reg32 offset="0xa86d" name="GPMU_POWER_COUNTER_0_HI"/>
	<reg32 offset="0xa86e" name="GPMU_POWER_COUNTER_1_LO"/>
	<reg32 offset="0xa86f" name="GPMU_POWER_COUNTER_1_HI"/>
	<reg32 offset="0xa870" name="GPMU_POWER_COUNTER_2_LO"/>
	<reg32 offset="0xa871" name="GPMU_POWER_COUNTER_2_HI"/>
	<reg32 offset="0xa872" name="GPMU_POWER_COUNTER_3_LO"/>
	<reg32 offset="0xa873" name="GPMU_POWER_COUNTER_3_HI"/>
	<reg32 offset="0xa874" name="GPMU_POWER_COUNTER_4_LO"/>
	<reg32 offset="0xa875" name="GPMU_POWER_COUNTER_4_HI"/>
	<reg32 offset="0xa876" name="GPMU_POWER_COUNTER_5_LO"/>
	<reg32 offset="0xa877" name="GPMU_POWER_COUNTER_5_HI"/>
	<reg32 offset="0xa878" name="GPMU_POWER_COUNTER_ENABLE"/>
	<reg32 offset="0xa879" name="GPMU_ALWAYS_ON_COUNTER_LO"/>
	<reg32 offset="0xa87a" name="GPMU_ALWAYS_ON_COUNTER_HI"/>
	<reg32 offset="0xa87b" name="GPMU_ALWAYS_ON_COUNTER_RESET"/>
	<reg32 offset="0xa87c" name="GPMU_POWER_COUNTER_SELECT_0"/>
	<reg32 offset="0xa87d" name="GPMU_POWER_COUNTER_SELECT_1"/>
	<reg32 offset="0xa8a3" name="GPMU_CLOCK_THROTTLE_CTRL"/>
	<reg32 offset="0xa8a8" name="GPMU_THROTTLE_UNMASK_FORCE_CTRL"/>
	<reg32 offset="0xac00" name="GPMU_TEMP_SENSOR_ID"/>
	<reg32 offset="0xac01" name="GPMU_TEMP_SENSOR_CONFIG"/>
	<reg32 offset="0xac02" name="GPMU_TEMP_VAL"/>
	<reg32 offset="0xac03" name="GPMU_DELTA_TEMP_THRESHOLD"/>
	<reg32 offset="0xac05" name="GPMU_TEMP_THRESHOLD_INTR_STATUS"/>
	<reg32 offset="0xac06" name="GPMU_TEMP_THRESHOLD_INTR_EN_MASK"/>
	<reg32 offset="0xac40" name="GPMU_LEAKAGE_TEMP_COEFF_0_1"/>
	<reg32 offset="0xac41" name="GPMU_LEAKAGE_TEMP_COEFF_2_3"/>
	<reg32 offset="0xac42" name="GPMU_LEAKAGE_VTG_COEFF_0_1"/>
	<reg32 offset="0xac43" name="GPMU_LEAKAGE_VTG_COEFF_2_3"/>
	<reg32 offset="0xac46" name="GPMU_BASE_LEAKAGE"/>
	<reg32 offset="0xac60" name="GPMU_GPMU_VOLTAGE"/>
	<reg32 offset="0xac61" name="GPMU_GPMU_VOLTAGE_INTR_STATUS"/>
	<reg32 offset="0xac62" name="GPMU_GPMU_VOLTAGE_INTR_EN_MASK"/>
	<reg32 offset="0xac80" name="GPMU_GPMU_PWR_THRESHOLD"/>
	<reg32 offset="0xacc4" name="GPMU_GPMU_LLM_GLM_SLEEP_CTRL"/>
	<reg32 offset="0xacc5" name="GPMU_GPMU_LLM_GLM_SLEEP_STATUS"/>
	<reg32 offset="0xb80c" name="GDPM_CONFIG1"/>
	<reg32 offset="0xb80d" name="GDPM_CONFIG2"/>
	<reg32 offset="0xb80f" name="GDPM_INT_EN"/>
	<reg32 offset="0xb811" name="GDPM_INT_MASK"/>
	<reg32 offset="0xb9a0" name="GPMU_BEC_ENABLE"/>
	<reg32 offset="0xc41a" name="GPU_CS_SENSOR_GENERAL_STATUS"/>
	<reg32 offset="0xc41d" name="GPU_CS_AMP_CALIBRATION_STATUS1_0"/>
	<reg32 offset="0xc41f" name="GPU_CS_AMP_CALIBRATION_STATUS1_2"/>
	<reg32 offset="0xc421" name="GPU_CS_AMP_CALIBRATION_STATUS1_4"/>
	<reg32 offset="0xc520" name="GPU_CS_ENABLE_REG"/>
	<reg32 offset="0xc557" name="GPU_CS_AMP_CALIBRATION_CONTROL1"/>


	<reg32 offset="0xe000" name="GRAS_CL_CNTL"/> <!-- always 00000080? -->
	<reg32 offset="0xe001" name="UNKNOWN_E001"/> <!-- always 00000000? -->
	<reg32 offset="0xe004" name="UNKNOWN_E004"/> <!-- always 00000000? -->
	<reg32 offset="0xe005" name="GRAS_CNTL">
		<!-- see also RB_RENDER_CONTROL0 -->
		<bitfield name="VARYING" pos="0" type="boolean"/>
		<!--
		bit 3 set when blob turns on WCOORD.. which also corresponds to
		register being set in in HLSQ_CONTROL_3_REG bits 8..15 (which
		shader does not use).. possibly providing wcoord in an alternate
		way??
		Also, when that happens, VARYING bits are turned on as well.
		 -->
		<bitfield name="UNK3" pos="3" type="boolean"/>
		<bitfield name="XCOORD" pos="6" type="boolean"/>
		<bitfield name="YCOORD" pos="7" type="boolean"/>
		<bitfield name="ZCOORD" pos="8" type="boolean"/>
		<bitfield name="WCOORD" pos="9" type="boolean"/>
	</reg32>
	<reg32 offset="0xe006" name="GRAS_CL_GUARDBAND_CLIP_ADJ">
		<bitfield name="HORZ" low="0" high="9" type="uint"/>
		<bitfield name="VERT" low="10" high="19" type="uint"/>
	</reg32>
	<reg32 offset="0xe010" name="GRAS_CL_VPORT_XOFFSET_0" type="float"/>
	<reg32 offset="0xe011" name="GRAS_CL_VPORT_XSCALE_0" type="float"/>
	<reg32 offset="0xe012" name="GRAS_CL_VPORT_YOFFSET_0" type="float"/>
	<reg32 offset="0xe013" name="GRAS_CL_VPORT_YSCALE_0" type="float"/>
	<reg32 offset="0xe014" name="GRAS_CL_VPORT_ZOFFSET_0" type="float"/>
	<reg32 offset="0xe015" name="GRAS_CL_VPORT_ZSCALE_0" type="float"/>
	<reg32 offset="0xe090" name="GRAS_SU_CNTL">
		<bitfield name="CULL_FRONT" pos="0" type="boolean"/>
		<bitfield name="CULL_BACK" pos="1" type="boolean"/>
		<bitfield name="FRONT_CW" pos="2" type="boolean"/>
		<bitfield name="LINEHALFWIDTH" low="3" high="10" radix="2" type="fixed"/>
		<bitfield name="POLY_OFFSET" pos="11" type="boolean"/>
		<bitfield name="MSAA_ENABLE" pos="13" type="boolean"/>
		<!-- probably LINEHALFWIDTH is the same as a4xx.. -->
	</reg32>
	<reg32 offset="0xe091" name="GRAS_SU_POINT_MINMAX">
		<bitfield name="MIN" low="0" high="15" type="ufixed" radix="4"/>
		<bitfield name="MAX" low="16" high="31" type="ufixed" radix="4"/>
	</reg32>
	<reg32 offset="0xe092" name="GRAS_SU_POINT_SIZE" type="fixed" radix="4"/>
	<reg32 offset="0xe093" name="UNKNOWN_E093"/> <!-- always 00000000? -->
	<reg32 offset="0xe094" name="GRAS_SU_DEPTH_PLANE_CNTL">
		<bitfield name="FRAG_WRITES_Z" pos="0" type="boolean"/>
		<bitfield name="UNK1" pos="1" type="boolean"/>
	</reg32>
	<reg32 offset="0xe095" name="GRAS_SU_POLY_OFFSET_SCALE" type="float"/>
	<reg32 offset="0xe096" name="GRAS_SU_POLY_OFFSET_OFFSET" type="float"/>
	<reg32 offset="0xe097" name="GRAS_SU_POLY_OFFSET_OFFSET_CLAMP" type="float"/>
	<!-- duplicates RB_DEPTH_INFO0: -->
	<reg32 offset="0xe098" name="GRAS_SU_DEPTH_BUFFER_INFO">
		<bitfield name="DEPTH_FORMAT" low="0" high="2" type="a5xx_depth_format"/>
	</reg32>
	<reg32 offset="0xe099" name="GRAS_SU_CONSERVATIVE_RAS_CNTL"/> <!-- always 00000000? -->
	<!--
	guessing about window/screen/extent, I think they can in the end be
	used interchangeably?
	 -->
	<reg32 offset="0xe0a0" name="GRAS_SC_CNTL">
		<bitfield name="SAMPLES_PASSED" pos="15" type="boolean"/>
	</reg32>
	<reg32 offset="0xe0a1" name="GRAS_SC_BIN_CNTL"/> <!-- always 00000000? -->
	<reg32 offset="0xe0a2" name="GRAS_SC_RAS_MSAA_CNTL">
		<bitfield name="SAMPLES" low="0" high="1" type="a3xx_msaa_samples"/>
	</reg32>
	<reg32 offset="0xe0a3" name="GRAS_SC_DEST_MSAA_CNTL">
		<bitfield name="SAMPLES" low="0" high="1" type="a3xx_msaa_samples"/>
		<bitfield name="MSAA_DISABLE" pos="2" type="boolean"/>
	</reg32>
	<reg32 offset="0xe0a4" name="GRAS_SC_SCREEN_SCISSOR_CNTL"/> <!-- always 00000000? -->
	<reg32 offset="0xe0aa" name="GRAS_SC_SCREEN_SCISSOR_TL_0" type="adreno_reg_xy"/>
	<reg32 offset="0xe0ab" name="GRAS_SC_SCREEN_SCISSOR_BR_0" type="adreno_reg_xy"/>
	<reg32 offset="0xe0ca" name="GRAS_SC_VIEWPORT_SCISSOR_TL_0" type="adreno_reg_xy"/>
	<reg32 offset="0xe0cb" name="GRAS_SC_VIEWPORT_SCISSOR_BR_0" type="adreno_reg_xy"/>
	<reg32 offset="0xe0ea" name="GRAS_SC_WINDOW_SCISSOR_TL" type="adreno_reg_xy"/>
	<reg32 offset="0xe0eb" name="GRAS_SC_WINDOW_SCISSOR_BR" type="adreno_reg_xy"/>

	<reg32 offset="0xe100" name="GRAS_LRZ_CNTL"/> <!-- always 00000000? -->
	<reg32 offset="0xe101" name="GRAS_LRZ_BUFFER_BASE_LO"/>
	<reg32 offset="0xe102" name="GRAS_LRZ_BUFFER_BASE_HI"/>
	<reg32 offset="0xe103" name="GRAS_LRZ_BUFFER_PITCH"/>
	<reg32 offset="0xe104" name="GRAS_LRZ_FAST_CLEAR_BUFFER_BASE_LO"/>
	<reg32 offset="0xe105" name="GRAS_LRZ_FAST_CLEAR_BUFFER_BASE_HI"/>

	<reg32 offset="0xe140" name="RB_CNTL">
		<bitfield name="WIDTH" low="0" high="7" shr="5" type="uint"/>
		<bitfield name="HEIGHT" low="9" high="16" shr="5" type="uint"/>
		<bitfield name="BYPASS" pos="17" type="boolean"/>
	</reg32>
	<reg32 offset="0xe141" name="RB_RENDER_CNTL">
<!--
bit 3 set for normal draws
bit 7 for RECTLIST (clear) when z32s8 (used for clear of depth32?  not set
	for z32 with no stencil, but maybe in that case separate z/s not used?
	see mrt-fbo-* zs=2)
 -->
		<bitfield name="SAMPLES_PASSED" pos="6" type="boolean"/>
		<!-- why everything twice?? maybe read vs write? -->
		<!-- UBWC flag buffer enabled for depth/stencil: -->
		<bitfield name="FLAG_DEPTH" pos="14" type="boolean"/>
		<bitfield name="FLAG_DEPTH2" pos="15" type="boolean"/>
		<!-- bitmask of MRTs using UBWC flag buffer: -->
		<bitfield name="FLAG_MRTS" low="16" high="23"/>
		<bitfield name="FLAG_MRTS2" low="24" high="31"/>
	</reg32>
	<reg32 offset="0xe142" name="RB_RAS_MSAA_CNTL">
		<bitfield name="SAMPLES" low="0" high="1" type="a3xx_msaa_samples"/>
	</reg32>
	<reg32 offset="0xe143" name="RB_DEST_MSAA_CNTL">
		<bitfield name="SAMPLES" low="0" high="1" type="a3xx_msaa_samples"/>
		<bitfield name="MSAA_DISABLE" pos="2" type="boolean"/>
	</reg32>
	<!--
	note: maybe not actually called RB_RENDER_CONTROLn (since RB_RENDER_CNTL
	name comes from kernel and is probably right)
	 -->
	<reg32 offset="0xe144" name="RB_RENDER_CONTROL0">
		<!-- see also GRAS_CNTL -->
		<bitfield name="VARYING" pos="0" type="boolean"/>
		<!--
		bit 3 set when blob turns on WCOORD.. which also corresponds to
		register being set in in HLSQ_CONTROL_3_REG bits 8..15 (which
		shader does not use).. possibly providing wcoord in an alternate
		way??
		Also, when that happens, VARYING bits are turned on as well.
		 -->
		<bitfield name="UNK3" pos="3" type="boolean"/>
		<bitfield name="XCOORD" pos="6" type="boolean"/>
		<bitfield name="YCOORD" pos="7" type="boolean"/>
		<bitfield name="ZCOORD" pos="8" type="boolean"/>
		<bitfield name="WCOORD" pos="9" type="boolean"/>
	</reg32>
	<reg32 offset="0xe145" name="RB_RENDER_CONTROL1">
		<bitfield name="FACENESS" pos="1" type="boolean"/>
	</reg32>
	<reg32 offset="0xe146" name="RB_FS_OUTPUT_CNTL">
		<!-- bit0 set except for binning pass.. -->
		<bitfield name="MRT" low="0" high="3" type="uint"/>
		<bitfield name="FRAG_WRITES_Z" pos="5" type="boolean"/>
	</reg32>
	<reg32 offset="0xe147" name="RB_RENDER_COMPONENTS">
		<bitfield name="RT0" low="0" high="3"/>
		<bitfield name="RT1" low="4" high="7"/>
		<bitfield name="RT2" low="8" high="11"/>
		<bitfield name="RT3" low="12" high="15"/>
		<bitfield name="RT4" low="16" high="19"/>
		<bitfield name="RT5" low="20" high="23"/>
		<bitfield name="RT6" low="24" high="27"/>
		<bitfield name="RT7" low="28" high="31"/>
	</reg32>
	<array offset="0xe150" name="RB_MRT" stride="7" length="8">
		<reg32 offset="0x0" name="CONTROL">
			<bitfield name="BLEND" pos="0" type="boolean"/>
			<bitfield name="BLEND2" pos="1" type="boolean"/>
			<bitfield name="COMPONENT_ENABLE" low="7" high="10" type="hex"/>
		</reg32>
		<reg32 offset="0x1" name="BLEND_CONTROL">
			<bitfield name="RGB_SRC_FACTOR" low="0" high="4" type="adreno_rb_blend_factor"/>
			<bitfield name="RGB_BLEND_OPCODE" low="5" high="7" type="a3xx_rb_blend_opcode"/>
			<bitfield name="RGB_DEST_FACTOR" low="8" high="12" type="adreno_rb_blend_factor"/>
			<bitfield name="ALPHA_SRC_FACTOR" low="16" high="20" type="adreno_rb_blend_factor"/>
			<bitfield name="ALPHA_BLEND_OPCODE" low="21" high="23" type="a3xx_rb_blend_opcode"/>
			<bitfield name="ALPHA_DEST_FACTOR" low="24" high="28" type="adreno_rb_blend_factor"/>
		</reg32>
		<reg32 offset="0x2" name="BUF_INFO">
			<!--
			not sure if there is a separate COLOR_SWAP field like on a3xx/a4xx,
			or if it is inherent in the format.  Will have to play with bits
			once we get things working and see what happens.  If it is a diff
			field, it doesn't seem to have the same encoding as a3xx/a4xx.
			 -->
			<bitfield name="COLOR_FORMAT" low="0" high="7" type="a5xx_color_fmt"/>
			<bitfield name="COLOR_TILE_MODE" low="8" high="9" type="a5xx_tile_mode"/>
			<bitfield name="COLOR_SWAP" low="13" high="14" type="a3xx_color_swap"/>
			<bitfield name="COLOR_SRGB" pos="15" type="boolean"/>
		</reg32>
		<!--
		at least in gmem, things seem to be aligned to pitch of 64..
		maybe an artifact of tiled format used in gmem?
		 -->
		<reg32 offset="0x3" name="PITCH" shr="6" type="uint"/>
		<reg32 offset="0x4" name="ARRAY_PITCH" shr="6" type="uint"/>
		<reg32 offset="0x5" name="BASE_LO"/>
		<reg32 offset="0x6" name="BASE_HI"/>
	</array>
	<reg32 offset="0xe1a0" name="RB_BLEND_RED">
		<bitfield name="UINT" low="0" high="7" type="hex"/>
		<bitfield name="SINT" low="8" high="15" type="hex"/>
		<bitfield name="FLOAT" low="16" high="31" type="float"/>
	</reg32>
	<reg32 offset="0xe1a1" name="RB_BLEND_RED_F32" type="float"/>
	<reg32 offset="0xe1a2" name="RB_BLEND_GREEN">
		<bitfield name="UINT" low="0" high="7" type="hex"/>
		<bitfield name="SINT" low="8" high="15" type="hex"/>
		<bitfield name="FLOAT" low="16" high="31" type="float"/>
	</reg32>
	<reg32 offset="0xe1a3" name="RB_BLEND_GREEN_F32" type="float"/>
	<reg32 offset="0xe1a4" name="RB_BLEND_BLUE">
		<bitfield name="UINT" low="0" high="7" type="hex"/>
		<bitfield name="SINT" low="8" high="15" type="hex"/>
		<bitfield name="FLOAT" low="16" high="31" type="float"/>
	</reg32>
	<reg32 offset="0xe1a5" name="RB_BLEND_BLUE_F32" type="float"/>
	<reg32 offset="0xe1a6" name="RB_BLEND_ALPHA">
		<bitfield name="UINT" low="0" high="7" type="hex"/>
		<bitfield name="SINT" low="8" high="15" type="hex"/>
		<bitfield name="FLOAT" low="16" high="31" type="float"/>
	</reg32>
	<reg32 offset="0xe1a7" name="RB_BLEND_ALPHA_F32" type="float"/>
	<reg32 offset="0xe1a8" name="RB_ALPHA_CONTROL">
		<bitfield name="ALPHA_REF" low="0" high="7" type="hex"/>
		<bitfield name="ALPHA_TEST" pos="8" type="boolean"/>
		<bitfield name="ALPHA_TEST_FUNC" low="9" high="11" type="adreno_compare_func"/>
	</reg32>
	<reg32 offset="0xe1a9" name="RB_BLEND_CNTL">
		<!-- per-mrt enable bit -->
		<bitfield name="ENABLE_BLEND" low="0" high="7"/>
		<bitfield name="INDEPENDENT_BLEND" pos="8" type="boolean"/>
		<!-- a guess? -->
		<bitfield name="SAMPLE_MASK" low="16" high="31"/>
	</reg32>
	<reg32 offset="0xe1b0" name="RB_DEPTH_PLANE_CNTL">
		<bitfield name="FRAG_WRITES_Z" pos="0" type="boolean"/>
		<bitfield name="UNK1" pos="1" type="boolean"/>
	</reg32>
	<reg32 offset="0xe1b1" name="RB_DEPTH_CNTL">
		<bitfield name="Z_ENABLE" pos="0" type="boolean"/>
		<bitfield name="Z_WRITE_ENABLE" pos="1" type="boolean"/>
		<bitfield name="ZFUNC" low="2" high="4" type="adreno_compare_func"/>
		<doc>Z_TEST_ENABLE bit is set for zfunc other than GL_ALWAYS or GL_NEVER</doc>
		<bitfield name="Z_TEST_ENABLE" pos="6" type="boolean"/>
	</reg32>
	<reg32 offset="0xe1b2" name="RB_DEPTH_BUFFER_INFO">
		<bitfield name="DEPTH_FORMAT" low="0" high="2" type="a5xx_depth_format"/>
	</reg32>
	<reg32 offset="0xe1b3" name="RB_DEPTH_BUFFER_BASE_LO"/>
	<reg32 offset="0xe1b4" name="RB_DEPTH_BUFFER_BASE_HI"/>
	<reg32 offset="0xe1b5" name="RB_DEPTH_BUFFER_PITCH" shr="6" type="uint">
		<doc>stride of depth/stencil buffer</doc>
	</reg32>
	<reg32 offset="0xe1b6" name="RB_DEPTH_BUFFER_ARRAY_PITCH" shr="6" type="uint">
		<doc>size of layer</doc>
	</reg32>
	<reg32 offset="0xe1c0" name="RB_STENCIL_CONTROL">
		<bitfield name="STENCIL_ENABLE" pos="0" type="boolean"/>
		<bitfield name="STENCIL_ENABLE_BF" pos="1" type="boolean"/>
		<!--
			set for stencil operations that require read from stencil
			buffer, but not for example for stencil clear (which does
			not require read).. so guessing this is analogous to
			READ_DEST_ENABLE for color buffer..
		 -->
		<bitfield name="STENCIL_READ" pos="2" type="boolean"/>
		<bitfield name="FUNC" low="8" high="10" type="adreno_compare_func"/>
		<bitfield name="FAIL" low="11" high="13" type="adreno_stencil_op"/>
		<bitfield name="ZPASS" low="14" high="16" type="adreno_stencil_op"/>
		<bitfield name="ZFAIL" low="17" high="19" type="adreno_stencil_op"/>
		<bitfield name="FUNC_BF" low="20" high="22" type="adreno_compare_func"/>
		<bitfield name="FAIL_BF" low="23" high="25" type="adreno_stencil_op"/>
		<bitfield name="ZPASS_BF" low="26" high="28" type="adreno_stencil_op"/>
		<bitfield name="ZFAIL_BF" low="29" high="31" type="adreno_stencil_op"/>
	</reg32>
	<reg32 offset="0xe1c1" name="RB_STENCIL_INFO">
		<bitfield name="SEPARATE_STENCIL" pos="0" type="boolean"/>
	</reg32>
	<reg32 offset="0xe1c2" name="RB_STENCIL_BASE_LO"/>
	<reg32 offset="0xe1c3" name="RB_STENCIL_BASE_HI"/>
	<reg32 offset="0xe1c4" name="RB_STENCIL_PITCH" shr="6" type="uint"/>
	<reg32 offset="0xe1c5" name="RB_STENCIL_ARRAY_PITCH" shr="6" type="uint"/>
	<reg32 offset="0xe1c6" name="RB_STENCILREFMASK" type="adreno_rb_stencilrefmask"/>
	<!--
	prob 0xe1c7 is RB_STENCILREFMASK_BF but blob isn't writing this unless bf
	stencil explicitly enabled??
	 -->
	<reg32 offset="0xe1c7" name="UNKNOWN_E1C7"/>
	<reg32 offset="0xe1d0" name="RB_WINDOW_OFFSET" type="adreno_reg_xy"/>

	<doc>
		Blits:
		------

		Blits are triggered by CP_EVENT_WRITE:BLIT, compared to previous
		generations where they shared most of the gl pipeline and were
		triggered by CP_DRAW_INDX*

		For gmem->mem blob uses RB_BLIT_CNTL.BUF to specify src of
		blit (ie MRTn, ZS, etc) and RB_BLIT_DST_LO/HI for destination
		gpuaddr.  The gmem offset is taken from RB_MRT[n].BASE_LO/HI

		For mem->gmem blob uses just MRT0 or ZS and RB_BLIT_DST_LO/HI
		for the GMEM offset, and gpuaddr from RB_MRT[0].BASE_LO/HI
		(I suppose this is just to avoid trashing RB_MRT[1..7]??)
	</doc>
	<reg32 offset="0xe210" name="RB_BLIT_CNTL">
		<bitfield name="BUF" low="0" high="3" type="a5xx_blit_buf"/>
	</reg32>
	<reg32 offset="0xe211" name="RB_RESOLVE_CNTL_1" type="adreno_reg_xy"/>
	<reg32 offset="0xe212" name="RB_RESOLVE_CNTL_2" type="adreno_reg_xy"/>
	<reg32 offset="0xe213" name="RB_RESOLVE_CNTL_3">
	<!--
		0xe213:
		        0x0 mem->gmem
		        0xf gmem->mem with flag buffer (color)
		        0x4 gmem->mem without flag buffer (color)
		        0x7 BYPASS mode flag buffer result (ie. on readpix)
		            also for gmem->mem preserving tiling
	-->
	</reg32>
	<reg32 offset="0xe214" name="RB_BLIT_DST_LO"/>
	<reg32 offset="0xe215" name="RB_BLIT_DST_HI"/>
	<reg32 offset="0xe216" name="RB_BLIT_DST_PITCH" shr="6" type="uint"/>
	<!-- array-pitch is size of layer -->
	<reg32 offset="0xe217" name="RB_BLIT_DST_ARRAY_PITCH" shr="6" type="uint"/>
	<reg32 offset="0xe218" name="RB_CLEAR_COLOR_DW0"/>
	<reg32 offset="0xe219" name="RB_CLEAR_COLOR_DW1"/>
	<reg32 offset="0xe21a" name="RB_CLEAR_COLOR_DW2"/>
	<reg32 offset="0xe21b" name="RB_CLEAR_COLOR_DW3"/>
	<reg32 offset="0xe21c" name="RB_CLEAR_CNTL">
		<bitfield name="FAST_CLEAR" pos="1" type="boolean"/>
		<doc>
			For MASK, if RB_BLIT_CNTL.BUF=BLIT_ZS:
				1 - depth
				2 - stencil
				3 - depth+stencil
			if RB_BLIT_CNTL.BUF=BLIT_MRTn
				then probably a component mask, I always see 0xf
		</doc>
		<bitfield name="MASK" low="4" high="7"/>
	</reg32>

	<doc>
		Buffer Metadata (flag buffers):
		-------------------------------

		Blob seems to stick some metadata at the front of the buffer,
		both z/s and MRT.  I think this is same as UBWC (bandwidth
		compression) metadata that mdp 1.7 and later supports.  See
		1d3fae5698ce5358caab87a15383b690941697e8 in downstream kernel.
		UBWC seems to stand for "universal bandwidth compression".

		Before glReadPixels() it does a pair of BYPASS blits (at least
		if metadata is used) presumably to resolve metadata.

		NOTES: see: getUBwcBlockSize(), getUBwcMetaBufferSize() at
		https://android.googlesource.com/platform/hardware/qcom/display/+/android-6.0.1_r40/msm8994/libgralloc/alloc_controller.cpp
		(note that bpp in bytes, not bits (so really cpp))
	</doc>
	<reg32 offset="0xe240" name="RB_DEPTH_FLAG_BUFFER_BASE_LO"/>
	<reg32 offset="0xe241" name="RB_DEPTH_FLAG_BUFFER_BASE_HI"/>
	<reg32 offset="0xe242" name="RB_DEPTH_FLAG_BUFFER_PITCH">
	</reg32>
	<array offset="0xe243" name="RB_MRT_FLAG_BUFFER" stride="4" length="8">
		<reg32 offset="0" name="ADDR_LO"/>
		<reg32 offset="1" name="ADDR_HI"/>
		<reg32 offset="2" name="PITCH" shr="6" type="uint"/>
		<!-- array-pitch is size of layer -->
		<reg32 offset="3" name="ARRAY_PITCH" shr="6" type="uint"/>
	</array>
	<reg32 offset="0xe263" name="RB_BLIT_FLAG_DST_LO"/>
	<reg32 offset="0xe264" name="RB_BLIT_FLAG_DST_HI"/>
	<reg32 offset="0xe265" name="RB_BLIT_FLAG_DST_PITCH" shr="6" type="uint"/>
	<!-- array-pitch is size of layer -->
	<reg32 offset="0xe266" name="RB_BLIT_FLAG_DST_ARRAY_PITCH" shr="6" type="uint"/>

	<reg32 offset="0xe280" name="VPC_CNTL_0">
		<doc>
			num of varyings plus four for gl_Position (plus one if gl_PointSize)
			plus # of transform-feedback (streamout) varyings if using the
			hw streamout (rather than stg instructions in shader)
		</doc>
		<bitfield name="STRIDE_IN_VPC" low="0" high="6" type="uint"/>
		<bitfield name="VARYING" pos="11" type="boolean"/>
	</reg32>
	<array offset="0xe282" name="VPC_VARYING_INTERP" stride="1" length="8">
		<reg32 offset="0x0" name="MODE"/>
	</array>
	<array offset="0xe28a" name="VPC_VARYING_PS_REPL" stride="1" length="8">
		<reg32 offset="0x0" name="MODE"/>
	</array>
	<reg32 offset="0xe292" name="UNKNOWN_E292"/>
	<reg32 offset="0xe293" name="UNKNOWN_E293"/>
	<array offset="0xe294" name="VPC_VAR" stride="1" length="4">
		<!-- one bit per varying component: -->
		<reg32 offset="0" name="DISABLE"/>
	</array>
	<reg32 offset="0xe298" name="VPC_GS_SIV_CNTL"/>
	<reg32 offset="0xe29a" name="UNKNOWN_E29A"/>
	<reg32 offset="0xe29d" name="VPC_PACK">
		<bitfield name="NUMNONPOSVAR" low="0" high="7" type="uint"/>
		<!--
		This seems to be the OUTLOC for the psize output.  It could possibly
		be the max-OUTLOC position, but it is only set when VS writes psize
		(and blob always puts psize at highest OUTLOC)
		 -->
		<bitfield name="PSIZELOC" low="8" high="15" type="uint"/>
	</reg32>
	<reg32 offset="0xe2a0" name="VPC_FS_PRIMITIVEID_CNTL"/>

	<doc>
		Stream-Out:
		-----------

		VPC_SO[0..3] registers setup details about streamout buffers, and
		number of components to write to each.

		VPC_SO_PROG provides the mapping between output varyings and the SO
		buffers.  It is written multiple times (via a CP_CONTEXT_REG_BUNCH
		packet, not sure if that matters), each write can handle up to two
		components of stream-out output.  Order matches up to OUTLOC,
		including padding.  So, if outputting first 3 varyings:

			SP_VS_OUT[0].REG: { A_REGID = r0.w | A_COMPMASK = 0xf | B_REGID = r0.x | B_COMPMASK = 0x7 }
			SP_VS_OUT[0x1].REG: { A_REGID = r1.w | A_COMPMASK = 0x3 | B_REGID = r2.y | B_COMPMASK = 0xf }
			SP_VS_VPC_DST[0].REG: { OUTLOC0 = 0 | OUTLOC1 = 4 | OUTLOC2 = 8 | OUTLOC3 = 12 }

		Then:

			VPC_SO_PROG: { A_BUF = 0 | A_OFF = 0 | A_EN | A_BUF = 0 | B_OFF = 4 | B_EN }
			VPC_SO_PROG: { A_BUF = 0 | A_OFF = 8 | A_EN | A_BUF = 0 | B_OFF = 12 | B_EN }
			VPC_SO_PROG: { A_BUF = 2 | A_OFF = 0 | A_EN | A_BUF = 2 | B_OFF = 4 | B_EN }
			VPC_SO_PROG: { A_BUF = 2 | A_OFF = 8 | A_EN | A_BUF = 0 | B_OFF = 0 }
			VPC_SO_PROG: { A_BUF = 1 | A_OFF = 0 | A_EN | A_BUF = 1 | B_OFF = 4 | B_EN }

		Note that varying order is OUTLOC0, OUTLOC2, OUTLOC1, and note
		the padding between OUTLOC1 and OUTLOC2.

		The BUF bitfield indicates which of the four streamout buffers
		to write into at the specified offset.

		The VPC_SO[n].FLUSH_BASE_LO/HI is used for hw to write back next
		offset which gets loaded back into VPC_SO[n].BUFFER_OFFSET via a
		CP_MEM_TO_REG.  Probably can be ignored until we have GS/etc, at
		which point we can't calculate the offset on the CPU.
	</doc>
	<reg32 offset="0xe2a1" name="VPC_SO_BUF_CNTL">
		<bitfield name="BUF0" pos="0" type="boolean"/>
		<bitfield name="BUF1" pos="3" type="boolean"/>
		<bitfield name="BUF2" pos="6" type="boolean"/>
		<bitfield name="BUF3" pos="9" type="boolean"/>
		<bitfield name="ENABLE" pos="15" type="boolean"/>
	</reg32>
	<reg32 offset="0xe2a2" name="VPC_SO_OVERRIDE">
		<bitfield name="SO_DISABLE" pos="0" type="boolean"/>
	</reg32>
	<reg32 offset="0xe2a3" name="VPC_SO_CNTL">
		<!-- always 0x10000 when SO enabled.. -->
		<bitfield name="ENABLE" pos="16" type="boolean"/>
	</reg32>
	<reg32 offset="0xe2a4" name="VPC_SO_PROG">
		<bitfield name="A_BUF" low="0" high="1" type="uint"/>
		<bitfield name="A_OFF" low="2" high="10" shr="2" type="uint"/>
		<bitfield name="A_EN" pos="11" type="boolean"/>
		<bitfield name="B_BUF" low="12" high="13" type="uint"/>
		<bitfield name="B_OFF" low="14" high="22" shr="2" type="uint"/>
		<bitfield name="B_EN" pos="23" type="boolean"/>
	</reg32>
	<array offset="0xe2a7" name="VPC_SO" stride="7" length="4">
		<reg32 offset="0" name="BUFFER_BASE_LO"/>
		<reg32 offset="1" name="BUFFER_BASE_HI"/>
		<reg32 offset="2" name="BUFFER_SIZE"/>
		<reg32 offset="3" name="NCOMP"/>  <!-- component count -->
		<reg32 offset="4" name="BUFFER_OFFSET"/>
		<reg32 offset="5" name="FLUSH_BASE_LO"/>
		<reg32 offset="6" name="FLUSH_BASE_HI"/>
	</array>

	<reg32 offset="0xe384" name="PC_PRIMITIVE_CNTL">
		<!-- # of varyings plus four for gl_Position (plus one if gl_PointSize) -->
		<bitfield name="STRIDE_IN_VPC" low="0" high="6" type="uint"/>
		<!-- bit 10 seems to almost always be set.. but not mrt-fbo, quad-textured.. also see stencil -->
	</reg32>
	<reg32 offset="0xe385" name="PC_PRIM_VTX_CNTL">
		<bitfield name="PSIZE" pos="11" type="boolean"/>
	</reg32>
	<reg32 offset="0xe388" name="PC_RASTER_CNTL"/>
	<reg32 offset="0xe389" name="UNKNOWN_E389"/>
	<reg32 offset="0xe38c" name="PC_RESTART_INDEX"/>
	<reg32 offset="0xe38d" name="UNKNOWN_E38D"/>
	<reg32 offset="0xe38e" name="PC_GS_PARAM"/>
	<reg32 offset="0xe38f" name="PC_HS_PARAM"/>
	<reg32 offset="0xe3b0" name="PC_POWER_CNTL"/>

	<reg32 offset="0xe400" name="VFD_CONTROL_0">
		<bitfield name="VTXCNT" low="0" high="5" type="uint"/>
	</reg32>
	<reg32 offset="0xe401" name="VFD_CONTROL_1">
		<bitfield name="REGID4VTX" low="0" high="7" type="a3xx_regid"/>
		<bitfield name="REGID4INST" low="8" high="15" type="a3xx_regid"/>
	</reg32>
	<reg32 offset="0xe402" name="VFD_CONTROL_2">
	</reg32>
	<reg32 offset="0xe403" name="VFD_CONTROL_3">
	</reg32>
	<reg32 offset="0xe404" name="VFD_CONTROL_4">
	</reg32>
	<reg32 offset="0xe405" name="VFD_CONTROL_5">
	</reg32>
	<reg32 offset="0xe408" name="VFD_INDEX_OFFSET"/>
	<reg32 offset="0xe409" name="VFD_INSTANCE_START_OFFSET"/>
	<array offset="0xe40a" name="VFD_FETCH" stride="4" length="32">
		<reg32 offset="0x0" name="BASE_LO"/>
		<reg32 offset="0x1" name="BASE_HI"/>
		<reg32 offset="0x2" name="SIZE" type="uint"/>
		<reg32 offset="0x3" name="STRIDE" type="uint"/>
	</array>
	<array offset="0xe48a" name="VFD_DECODE" stride="2" length="32">
		<reg32 offset="0x0" name="INSTR">
			<!-- IDX appears to index into VFD_FETCH[] -->
			<bitfield name="IDX" low="0" high="4" type="uint"/>
			<bitfield name="INSTANCED" pos="17" type="boolean"/>
			<bitfield name="FORMAT" low="20" high="29" type="a5xx_vtx_fmt"/>
			<bitfield name="UNK30" pos="30" type="boolean"/>
			<bitfield name="FLOAT" pos="31" type="boolean"/>
		</reg32>
		<reg32 offset="0x1" name="STEP_RATE"/> <!-- ??? -->
	</array>
	<array offset="0xe4ca" name="VFD_DEST_CNTL" stride="1" length="32">
		<reg32 offset="0x0" name="INSTR">
			<bitfield name="WRITEMASK" low="0" high="3" type="hex"/>
			<bitfield name="REGID" low="4" high="11" type="a3xx_regid"/>
		</reg32>
	</array>
	<reg32 offset="0xe4f0" name="VFD_POWER_CNTL"/>

	<reg32 offset="0xe580" name="SP_SP_CNTL"/>
	<bitset name="a5xx_xs_control_reg" inline="yes">
		<bitfield name="ENABLED" pos="0" type="boolean"/>
		<bitfield name="CONSTOBJECTOFFSET" low="1" high="7" type="uint"/>
		<bitfield name="SHADEROBJOFFSET" low="8" high="14" type="uint"/>
	</bitset>
	<bitset name="a5xx_xs_cntl" inline="yes">
		<!--
		no idea high bit.. could be this is amount of on-chip memory used
		rather than total size?
		 -->
		<bitfield name="INSTRLEN" low="1" high="31" type="uint"/>
	</bitset>
	<!-- assuming things appear in same relative order as a4xx: -->
	<!-- duplicated exactly w/ corresponding HLSQ_ regs starting at 0xe78b.. -->
	<reg32 offset="0xe584" name="SP_VS_CONTROL_REG" type="a5xx_xs_control_reg"/>
	<reg32 offset="0xe585" name="SP_FS_CONTROL_REG" type="a5xx_xs_control_reg"/>
	<reg32 offset="0xe586" name="SP_HS_CONTROL_REG" type="a5xx_xs_control_reg"/>
	<reg32 offset="0xe587" name="SP_DS_CONTROL_REG" type="a5xx_xs_control_reg"/>
	<reg32 offset="0xe588" name="SP_GS_CONTROL_REG" type="a5xx_xs_control_reg"/>
	<reg32 offset="0xe589" name="SP_CS_CONFIG"/>
	<reg32 offset="0xe58a" name="SP_VS_CONFIG_MAX_CONST"/>
	<reg32 offset="0xe58b" name="SP_FS_CONFIG_MAX_CONST"/>
	<reg32 offset="0xe590" name="SP_VS_CTRL_REG0">
		<!-- maybe same as SP_FS_CTRL_REG0, etc? -->
		<!-- bit1 + bit2 set for "buffer" mode (ie. shader small enough to fit internally) -->
		<bitfield name="HALFREGFOOTPRINT" low="4" high="9" type="uint"/>
		<bitfield name="FULLREGFOOTPRINT" low="10" high="15" type="uint"/>
		<bitfield name="VARYING" pos="16" type="boolean"/>
		<bitfield name="PIXLODENABLE" pos="20" type="boolean"/>
		<!-- seems to be nesting level for flow control:.. -->
		<bitfield name="BRANCHSTACK" low="25" high="31" type="uint"/>
	</reg32>
	<reg32 offset="0xe592" name="SP_PRIMITIVE_CNTL">
		<!-- # of VS outputs including pos/psize -->
		<bitfield name="VSOUT" low="0" high="4" type="uint"/>
	</reg32>
	<array offset="0xe593" name="SP_VS_OUT" stride="1" length="16">
		<reg32 offset="0x0" name="REG">
			<bitfield name="A_REGID" low="0" high="7" type="a3xx_regid"/>
			<bitfield name="A_COMPMASK" low="8" high="11" type="hex"/>
			<bitfield name="B_REGID" low="16" high="23" type="a3xx_regid"/>
			<bitfield name="B_COMPMASK" low="24" high="27" type="hex"/>
		</reg32>
	</array>
	<!--
	Starting with a5xx, position/psize outputs from shader end up in the
	SP_VS_OUT map, with highest OUTLOCn position.  (Generally they are
	the last entries too, except when gl_PointCoord is used, blob inserts
	an extra varying after, but with a lower OUTLOC position.  If present,
	psize is last, preceeded by position.
	 -->
	<array offset="0xe5a3" name="SP_VS_VPC_DST" stride="1" length="8">
		<reg32 offset="0x0" name="REG">
			<bitfield name="OUTLOC0" low="0" high="7" type="uint"/>
			<bitfield name="OUTLOC1" low="8" high="15" type="uint"/>
			<bitfield name="OUTLOC2" low="16" high="23" type="uint"/>
			<bitfield name="OUTLOC3" low="24" high="31" type="uint"/>
		</reg32>
	</array>
	<reg32 offset="0xe5ab" name="UNKNOWN_E5AB"/>
	<reg32 offset="0xe5ac" name="SP_VS_OBJ_START_LO"/>
	<reg32 offset="0xe5ad" name="SP_VS_OBJ_START_HI"/>
	<reg32 offset="0xe5c0" name="SP_FS_CTRL_REG0">
		<!-- maybe same as SP_VS_CTRL_REG0, etc? -->
		<!-- bit1 + bit2 set for "buffer" mode (ie. shader small enough to fit internally) -->
		<bitfield name="HALFREGFOOTPRINT" low="4" high="9" type="uint"/>
		<bitfield name="FULLREGFOOTPRINT" low="10" high="15" type="uint"/>
		<bitfield name="VARYING" pos="16" type="boolean"/>
		<bitfield name="PIXLODENABLE" pos="20" type="boolean"/>
		<bitfield name="BRANCHSTACK" low="25" high="31" type="uint"/>
	</reg32>
	<reg32 offset="0xe5c2" name="UNKNOWN_E5C2"/>
	<reg32 offset="0xe5c3" name="SP_FS_OBJ_START_LO"/>
	<reg32 offset="0xe5c4" name="SP_FS_OBJ_START_HI"/>
	<reg32 offset="0xe5c9" name="SP_BLEND_CNTL"/>
	<reg32 offset="0xe5ca" name="SP_FS_OUTPUT_CNTL">
		<bitfield name="MRT" low="0" high="3" type="uint"/>
		<bitfield name="DEPTH_REGID" low="5" high="12" type="a3xx_regid"/>
		<bitfield name="SAMPLEMASK_REGID" low="13" high="20" type="a3xx_regid"/>
	</reg32>
	<array offset="0xe5cb" name="SP_FS_OUTPUT" stride="1" length="8">
		<doc>per MRT</doc>
		<reg32 offset="0x0" name="REG">
			<bitfield name="REGID" low="0" high="7" type="a3xx_regid"/>
			<bitfield name="HALF_PRECISION" pos="8" type="boolean"/>
		</reg32>
	</array>
	<array offset="0xe5d3" name="SP_FS_MRT" stride="1" length="8">
		<reg32 offset="0" name="REG">
			<bitfield name="COLOR_FORMAT" low="0" high="7" type="a5xx_color_fmt"/>
			<bitfield name="COLOR_SRGB" pos="10" type="boolean"/>
		</reg32>
	</array>
	<!--
	e5db/e5dc seems to look related to some optimization to do sample from
	texture using varying value directly before shader thread starts?  I
	guess that could optimize common simple frag shaders..
	 -->
	<reg32 offset="0xe5db" name="UNKNOWN_E5DB"/>
	<reg32 offset="0xe5f0" name="SP_CS_CNTL_0"/>
	<reg32 offset="0xe600" name="UNKNOWN_E600"/>
	<reg32 offset="0xe640" name="UNKNOWN_E640"/>

	<reg32 offset="0xe704" name="TPL1_TP_RAS_MSAA_CNTL">
		<bitfield name="SAMPLES" low="0" high="1" type="a3xx_msaa_samples"/>
	</reg32>
	<reg32 offset="0xe705" name="TPL1_TP_DEST_MSAA_CNTL">
		<bitfield name="SAMPLES" low="0" high="1" type="a3xx_msaa_samples"/>
		<bitfield name="MSAA_DISABLE" pos="2" type="boolean"/>
	</reg32>
	<!-- either blob is doing it wrong, or this is not per-stage anymore: -->
	<reg32 offset="0xe706" name="TPL1_TP_BORDER_COLOR_BASE_ADDR_LO"/>
	<reg32 offset="0xe707" name="TPL1_TP_BORDER_COLOR_BASE_ADDR_HI"/>

	<!--
	so these have the same info that is normally in the CP_LOAD_STATE
	packets.. not sure if they are normally written by pm4/me or if the
	CP_LOAD_STATE mechanism is deprecated?
	 -->
	<reg32 offset="0xe700" name="TPL1_VS_TEX_COUNT" type="uint"/>
	<reg32 offset="0xe722" name="TPL1_VS_TEX_SAMP_LO"/>
	<reg32 offset="0xe723" name="TPL1_VS_TEX_SAMP_HI"/>
	<reg32 offset="0xe72a" name="TPL1_VS_TEX_CONST_LO"/>
	<reg32 offset="0xe72b" name="TPL1_VS_TEX_CONST_HI"/>
	<reg32 offset="0xe750" name="TPL1_FS_TEX_COUNT" type="uint"/>
	<reg32 offset="0xe75a" name="TPL1_FS_TEX_SAMP_LO"/>
	<reg32 offset="0xe75b" name="TPL1_FS_TEX_SAMP_HI"/>
	<reg32 offset="0xe75e" name="TPL1_FS_TEX_CONST_LO"/>
	<reg32 offset="0xe75f" name="TPL1_FS_TEX_CONST_HI"/>
	<reg32 offset="0xe764" name="TPL1_TP_FS_ROTATION_CNTL"/>

	<reg32 offset="0xe784" name="HLSQ_CONTROL_0_REG">
	</reg32>
	<reg32 offset="0xe785" name="HLSQ_CONTROL_1_REG">
		<!-- I guess.. not set exactly same as a4xx, but similar: -->
		<bitfield name="PRIMALLOCTHRESHOLD" low="0" high="5" type="uint"/>
	</reg32>
	<reg32 offset="0xe786" name="HLSQ_CONTROL_2_REG">
		<bitfield name="FACEREGID" low="0" high="7" type="a3xx_regid"/>
		<!-- 8..15 used in advanced-blend.. possibly reg gets loaded w/ current color?? -->
	</reg32>
	<reg32 offset="0xe787" name="HLSQ_CONTROL_3_REG">
		<!-- register loaded with position (bary.f) -->
		<bitfield name="FRAGCOORDXYREGID" low="0" high="7" type="a3xx_regid"/>
	</reg32>
	<reg32 offset="0xe788" name="HLSQ_CONTROL_4_REG">
		<bitfield name="XYCOORDREGID" low="16" high="23" type="a3xx_regid"/>
		<bitfield name="ZWCOORDREGID" low="24" high="31" type="a3xx_regid"/>
	</reg32>
	<reg32 offset="0xe78a" name="HLSQ_UPDATE_CNTL"/>
	<reg32 offset="0xe78b" name="HLSQ_VS_CONTROL_REG" type="a5xx_xs_control_reg"/>
	<reg32 offset="0xe78c" name="HLSQ_FS_CONTROL_REG" type="a5xx_xs_control_reg"/>
	<reg32 offset="0xe78d" name="HLSQ_HS_CONTROL_REG" type="a5xx_xs_control_reg"/>
	<reg32 offset="0xe78e" name="HLSQ_DS_CONTROL_REG" type="a5xx_xs_control_reg"/>
	<reg32 offset="0xe78f" name="HLSQ_GS_CONTROL_REG" type="a5xx_xs_control_reg"/>
	<reg32 offset="0xe790" name="HLSQ_CS_CONFIG"/>
	<reg32 offset="0xe791" name="HLSQ_VS_CNTL" type="a5xx_xs_cntl"/>
	<reg32 offset="0xe792" name="HLSQ_FS_CNTL" type="a5xx_xs_cntl"/>
	<reg32 offset="0xe793" name="HLSQ_HS_CNTL" type="a5xx_xs_cntl"/>
	<reg32 offset="0xe794" name="HLSQ_DS_CNTL" type="a5xx_xs_cntl"/>
	<reg32 offset="0xe795" name="HLSQ_GS_CNTL" type="a5xx_xs_cntl"/>
	<reg32 offset="0xe796" name="HLSQ_CS_CNTL" type="a5xx_xs_cntl"/>
	<reg32 offset="0xe7b9" name="HLSQ_CS_KERNEL_GROUP_X"/>
	<reg32 offset="0xe7ba" name="HLSQ_CS_KERNEL_GROUP_Y"/>
	<reg32 offset="0xe7bb" name="HLSQ_CS_KERNEL_GROUP_Z"/>
	<reg32 offset="0xe7b0" name="HLSQ_CS_NDRANGE_0"/>
	<reg32 offset="0xe7b1" name="HLSQ_CS_NDRANGE_1"/>
	<reg32 offset="0xe7b2" name="HLSQ_CS_NDRANGE_2"/>
	<reg32 offset="0xe7b3" name="HLSQ_CS_NDRANGE_3"/>
	<reg32 offset="0xe7b4" name="HLSQ_CS_NDRANGE_4"/>
	<reg32 offset="0xe7b5" name="HLSQ_CS_NDRANGE_5"/>
	<reg32 offset="0xe7b6" name="HLSQ_CS_NDRANGE_6"/>
	<reg32 offset="0xe7b7" name="HLSQ_CS_CNTL_0"/>
	<reg32 offset="0xe7b8" name="HLSQ_CS_CNTL_1"/>
	<reg32 offset="0xe7c0" name="UNKNOWN_E7C0"/>
	<reg32 offset="0xe7c3" name="HLSQ_VS_CONSTLEN" type="uint"/>
	<reg32 offset="0xe7c4" name="HLSQ_VS_INSTRLEN" type="uint"/>
	<reg32 offset="0xe7c5" name="UNKNOWN_E7C5"/>
	<reg32 offset="0xe7ca" name="UNKNOWN_E7CA"/>
	<reg32 offset="0xe7d7" name="HLSQ_FS_CONSTLEN" type="uint"/>
	<reg32 offset="0xe7d8" name="HLSQ_FS_INSTRLEN" type="uint"/>
	<reg32 offset="0xe7c8" name="HLSQ_HS_CONSTLEN" type="uint"/>
	<reg32 offset="0xe7c9" name="HLSQ_HS_INSTRLEN" type="uint"/>
	<reg32 offset="0xe7cd" name="HLSQ_DS_CONSTLEN" type="uint"/>
	<reg32 offset="0xe7ce" name="HLSQ_DS_INSTRLEN" type="uint"/>
	<reg32 offset="0xe7cf" name="UNKNOWN_E7CF"/>
	<reg32 offset="0xe7d2" name="HLSQ_GS_CONSTLEN" type="uint"/>
	<reg32 offset="0xe7d3" name="HLSQ_GS_INSTRLEN" type="uint"/>
	<reg32 offset="0xe7d4" name="UNKNOWN_E7D4"/>
	<reg32 offset="0xe7d9" name="UNKNOWN_E7D9"/>
	<reg32 offset="0xe7dc" name="HLSQ_CONTEXT_SWITCH_CS_SW_3"/>
	<reg32 offset="0xe7dd" name="HLSQ_CONTEXT_SWITCH_CS_SW_4"/>

	<!--
		Separate blit/2d or dma engine?  Seems to get used sometimes for
		texture uploads, where a4xx blob would use normal draws.  Used
		in render-mode 0x5..

		Note seems mostly to be used for small blits, large blits seem
		to use the CP_EVENT_WRITE:BLIT style of doing things.  See
		cubemap-0003 (40x40) vs cubemap-0004 (256x256).

		see cube-0000, cubemap-(1..3 but not 4+), quad-textured-10..17

		Other nearby registers are probably color formats, etc.  The
		blit coords are in CP packet.  Play more w/ glTexSubImage2D()
		to work it out.

		Separate this into a different domain??  Would that help to
		restrict which registers we dump based on mode?
	 -->
	<reg32 offset="0x2101" name="RB_2D_SRC_SOLID_DW0"/>
	<reg32 offset="0x2102" name="RB_2D_SRC_SOLID_DW1"/>
	<reg32 offset="0x2103" name="RB_2D_SRC_SOLID_DW2"/>
	<reg32 offset="0x2104" name="RB_2D_SRC_SOLID_DW3"/>
	<reg32 offset="0x2107" name="RB_2D_SRC_INFO">
		<bitfield name="COLOR_FORMAT" low="0" high="7" type="a5xx_color_fmt"/>
		<bitfield name="COLOR_SWAP" low="10" high="11" type="a3xx_color_swap"/>
	</reg32>
	<reg32 offset="0x2108" name="RB_2D_SRC_LO"/>
	<reg32 offset="0x2109" name="RB_2D_SRC_HI"/>
	<reg32 offset="0x210a" name="RB_2D_SRC_SIZE">
		<bitfield name="PITCH" low="0" high="15" shr="6" type="uint"/>
		<bitfield name="ARRAY_PITCH" low="16" high="31" shr="6" type="uint"/>
	</reg32>
	<reg32 offset="0x2110" name="RB_2D_DST_INFO">
		<bitfield name="COLOR_FORMAT" low="0" high="7" type="a5xx_color_fmt"/>
		<bitfield name="COLOR_SWAP" low="10" high="11" type="a3xx_color_swap"/>
	</reg32>
	<reg32 offset="0x2111" name="RB_2D_DST_LO"/>
	<reg32 offset="0x2112" name="RB_2D_DST_HI"/>
	<reg32 offset="0x2113" name="RB_2D_DST_SIZE">
		<bitfield name="PITCH" low="0" high="15" shr="6" type="uint"/>
		<bitfield name="ARRAY_PITCH" low="16" high="31" shr="6" type="uint"/>
	</reg32>
	<reg32 offset="0x2140" name="RB_2D_SRC_FLAGS_LO"/>
	<reg32 offset="0x2141" name="RB_2D_SRC_FLAGS_HI"/>
	<reg32 offset="0x2143" name="RB_2D_DST_FLAGS_LO"/>
	<reg32 offset="0x2144" name="RB_2D_DST_FLAGS_HI"/>
	<!-- looks same as 0x2107: -->
	<reg32 offset="0x2181" name="GRAS_2D_SRC_INFO">
		<bitfield name="COLOR_FORMAT" low="0" high="7" type="a5xx_color_fmt"/>
		<bitfield name="COLOR_SWAP" low="10" high="11" type="a3xx_color_swap"/>
	</reg32>
	<!-- looks same as 0x2110: -->
	<reg32 offset="0x2182" name="GRAS_2D_DST_INFO">
		<bitfield name="COLOR_FORMAT" low="0" high="7" type="a5xx_color_fmt"/>
		<bitfield name="COLOR_SWAP" low="10" high="11" type="a3xx_color_swap"/>
	</reg32>
<!--
0x2100 and 0x2180 look like same thing (RB and GRAS versions)..
   0x86000000 for copy, 0x00000000 for fill?

0x2184 0x9 for copy, 0x1 for blit (maybe bitmask of enabled src/dst???)
 -->
	<reg32 offset="0x2100" name="UNKNOWN_2100"/>
	<reg32 offset="0x2180" name="UNKNOWN_2180"/>
	<reg32 offset="0x2184" name="UNKNOWN_2184"/>
</domain>

<domain name="A5XX_TEX_SAMP" width="32">
	<doc>Texture sampler dwords</doc>
	<enum name="a5xx_tex_filter"> <!-- same as a4xx? -->
		<value name="A5XX_TEX_NEAREST" value="0"/>
		<value name="A5XX_TEX_LINEAR" value="1"/>
		<value name="A5XX_TEX_ANISO" value="2"/>
	</enum>
	<enum name="a5xx_tex_clamp"> <!-- same as a4xx? -->
		<value name="A5XX_TEX_REPEAT" value="0"/>
		<value name="A5XX_TEX_CLAMP_TO_EDGE" value="1"/>
		<value name="A5XX_TEX_MIRROR_REPEAT" value="2"/>
		<value name="A5XX_TEX_CLAMP_TO_BORDER" value="3"/>
		<value name="A5XX_TEX_MIRROR_CLAMP" value="4"/>
	</enum>
	<enum name="a5xx_tex_aniso"> <!-- same as a4xx? -->
		<value name="A5XX_TEX_ANISO_1" value="0"/>
		<value name="A5XX_TEX_ANISO_2" value="1"/>
		<value name="A5XX_TEX_ANISO_4" value="2"/>
		<value name="A5XX_TEX_ANISO_8" value="3"/>
		<value name="A5XX_TEX_ANISO_16" value="4"/>
	</enum>
	<reg32 offset="0" name="0">
		<bitfield name="MIPFILTER_LINEAR_NEAR" pos="0" type="boolean"/>
		<bitfield name="XY_MAG" low="1" high="2" type="a5xx_tex_filter"/>
		<bitfield name="XY_MIN" low="3" high="4" type="a5xx_tex_filter"/>
		<bitfield name="WRAP_S" low="5" high="7" type="a5xx_tex_clamp"/>
		<bitfield name="WRAP_T" low="8" high="10" type="a5xx_tex_clamp"/>
		<bitfield name="WRAP_R" low="11" high="13" type="a5xx_tex_clamp"/>
		<bitfield name="ANISO" low="14" high="16" type="a5xx_tex_aniso"/>
		<bitfield name="LOD_BIAS" low="19" high="31" type="fixed" radix="8"/><!-- no idea how many bits for real -->
	</reg32>
	<reg32 offset="1" name="1">
		<bitfield name="COMPARE_FUNC" low="1" high="3" type="adreno_compare_func"/>
		<bitfield name="CUBEMAPSEAMLESSFILTOFF" pos="4" type="boolean"/>
		<bitfield name="UNNORM_COORDS" pos="5" type="boolean"/>
		<bitfield name="MIPFILTER_LINEAR_FAR" pos="6" type="boolean"/>
		<bitfield name="MAX_LOD" low="8" high="19" type="ufixed" radix="8"/>
		<bitfield name="MIN_LOD" low="20" high="31" type="ufixed" radix="8"/>
	</reg32>
	<reg32 offset="2" name="2">
		<!--
		offset into border-color buffer?  Blob always uses 0x80 for FS state
		if both VS and FS have border-color.
Seems like when both VS and FS have bcolor, one starts 0x300 after other..
and 0x80 in TEX_SAMP.2 ..  blob doesn't seem to be able to cope w/ multiple
different border-color states per texture..  Looks something like:
0000: 3f000000 00000000 00000000 3f800000 00008000 ffff0000 00004000 7fff0000
0020: 00003800 3c000000 80100010 0000f008 ff000080 7f000040 c0000200 00800000
0040: 00003800 3c000000 00000000 00000000 00000000 00000000 00000000 00000000
*
0300: 3f800000 3f800000 3f800000 3f800000 ffffffff ffffffff 7fff7fff 7fff7fff
0320: 3c003c00 3c003c00 ffffffff 0000ffff ffffffff 7f7f7f7f ffffffff 00ffffff
0340: 3c003c00 3c003c00 00000000 00000000 00000000 00000000 00000000 00000000

		 -->
		<bitfield name="BCOLOR_OFFSET" low="4" high="31"/>
	</reg32>
	<reg32 offset="3" name="3"/>
</domain>

<domain name="A5XX_TEX_CONST" width="32">
	<doc>Texture constant dwords</doc>
	<enum name="a5xx_tex_swiz"> <!-- same as a4xx? -->
		<value name="A5XX_TEX_X" value="0"/>
		<value name="A5XX_TEX_Y" value="1"/>
		<value name="A5XX_TEX_Z" value="2"/>
		<value name="A5XX_TEX_W" value="3"/>
		<value name="A5XX_TEX_ZERO" value="4"/>
		<value name="A5XX_TEX_ONE" value="5"/>
	</enum>
	<enum name="a5xx_tex_type"> <!-- same as a4xx? -->
		<value name="A5XX_TEX_1D" value="0"/>
		<value name="A5XX_TEX_2D" value="1"/>
		<value name="A5XX_TEX_CUBE" value="2"/>
		<value name="A5XX_TEX_3D" value="3"/>
	</enum>
	<reg32 offset="0" name="0">
		<bitfield name="TILE_MODE" low="0" high="1" type="a5xx_tile_mode"/>
		<bitfield name="SRGB" pos="2" type="boolean"/>
		<bitfield name="SWIZ_X" low="4" high="6" type="a5xx_tex_swiz"/>
		<bitfield name="SWIZ_Y" low="7" high="9" type="a5xx_tex_swiz"/>
		<bitfield name="SWIZ_Z" low="10" high="12" type="a5xx_tex_swiz"/>
		<bitfield name="SWIZ_W" low="13" high="15" type="a5xx_tex_swiz"/>
		<bitfield name="MIPLVLS" low="16" high="19" type="uint"/>
		<bitfield name="FMT" low="22" high="29" type="a5xx_tex_fmt"/>
		<bitfield name="SWAP" low="30" high="31" type="a3xx_color_swap"/>
	</reg32>
	<reg32 offset="1" name="1">
		<bitfield name="WIDTH" low="0" high="14" type="uint"/>
		<bitfield name="HEIGHT" low="15" high="29" type="uint"/>
	</reg32>
	<reg32 offset="2" name="2">
		<bitfield name="FETCHSIZE" low="0" high="3" type="a5xx_tex_fetchsize"/>
		<doc>Pitch in bytes (so actually stride)</doc>
		<bitfield name="PITCH" low="7" high="28" type="uint"/>
		<bitfield name="TYPE" low="29" high="30" type="a5xx_tex_type"/>
	</reg32>
	<reg32 offset="3" name="3">
		<bitfield name="ARRAY_PITCH" low="0" high="13" shr="12" type="uint"/>
		<bitfield name="FLAG" pos="28" type="boolean"/>
	</reg32>
	<reg32 offset="4" name="4">
		<bitfield name="BASE_LO" low="5" high="31" shr="5"/>
	</reg32>
	<reg32 offset="5" name="5">
		<bitfield name="BASE_HI" low="0" high="16"/>
		<bitfield name="DEPTH" low="17" high="29" type="uint"/>
	</reg32>
	<reg32 offset="6" name="6"/>
	<reg32 offset="7" name="7"/>
	<reg32 offset="8" name="8"/>
	<reg32 offset="9" name="9"/>
	<reg32 offset="10" name="10"/>
	<reg32 offset="11" name="11"/>
</domain>

</database>
